"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[2884],{147:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=a(4848),s=a(5680);const i={sidebar_position:9},r="Advanced Usage",l={id:"cascade/aggregate/advanced",title:"Advanced Usage",description:"Aggregate class is also shipped with more useful methods to help you use queries easily.",source:"@site/docs/cascade/aggregate/advanced.mdx",sourceDirName:"cascade/aggregate",slug:"/cascade/aggregate/advanced",permalink:"/docs/cascade/aggregate/advanced",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mongodb",previous:{title:"Lookup (Joins)",permalink:"/docs/cascade/aggregate/lookup"},next:{title:"Delete Documents",permalink:"/docs/cascade/aggregate/delete"}},c={},d=[{value:"Min",id:"min",level:2},{value:"Get Max value",id:"get-max-value",level:2},{value:"Get Average value",id:"get-average-value",level:2},{value:"Get Sum value",id:"get-sum-value",level:2},{value:"Get distinct values",id:"get-distinct-values",level:2},{value:"Get Distinct Heavy Values",id:"get-distinct-heavy-values",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.RP)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,t.jsx)(n.p,{children:"Aggregate class is also shipped with more useful methods to help you use queries easily."}),"\n",(0,t.jsx)(n.h2,{id:"min",children:"Min"}),"\n",(0,t.jsxs)(n.p,{children:["To get minimum value of a field, we can use ",(0,t.jsx)(n.code,{children:"min"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"Method Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"public min(field: string): number;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const minAge = await aggregate.min("age");\n'})}),"\n",(0,t.jsx)(n.p,{children:"This will return the minimum age of all users."}),"\n",(0,t.jsx)(n.h2,{id:"get-max-value",children:"Get Max value"}),"\n",(0,t.jsxs)(n.p,{children:["To get maximum value of a field, we can use ",(0,t.jsx)(n.code,{children:"max"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"Method Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"public max(field: string): number;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const maxAge = await aggregate.max("age");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get-average-value",children:"Get Average value"}),"\n",(0,t.jsxs)(n.p,{children:["To get average value of a field, we can use ",(0,t.jsx)(n.code,{children:"avg"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"Method Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"public avg(field: string): number;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const avgAge = await aggregate.avg("age");\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"average"})," is an alias for ",(0,t.jsx)(n.code,{children:"avg"})," method."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"get-sum-value",children:"Get Sum value"}),"\n",(0,t.jsxs)(n.p,{children:["To get sum value of a field, we can use ",(0,t.jsx)(n.code,{children:"sum"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"Method Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"public sum(field: string): number;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const totalSalaries = await aggregate.sum("salary");\n'})}),"\n",(0,t.jsxs)(n.p,{children:["We can also use filters with it as well by using ",(0,t.jsx)(n.code,{children:"where"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const totalSalaries = await aggregate.where("age", ">", 20).sum("salary");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get-distinct-values",children:"Get distinct values"}),"\n",(0,t.jsxs)(n.p,{children:["To get distinct values of a field, we can use ",(0,t.jsx)(n.code,{children:"distinct"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"Method Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"public distinct(field: string): any[];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const distinctAges = await aggregate.distinct("age");\n'})}),"\n",(0,t.jsx)(n.p,{children:"It will return an array of values."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Please note that if the field has a null value, it will be returned as well."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can also use ",(0,t.jsx)(n.code,{children:"unique"})," method as an alias to it."]}),"\n",(0,t.jsx)(n.h2,{id:"get-distinct-heavy-values",children:"Get Distinct Heavy Values"}),"\n",(0,t.jsxs)(n.p,{children:["This method is similar to ",(0,t.jsx)(n.code,{children:"distinct"})," method, but it will return the distinct values without the ",(0,t.jsx)(n.code,{children:"null"})," values."]}),"\n",(0,t.jsx)(n.p,{children:"Method Signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"public distinctHeavy(field: string): any[];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'const distinctAges = await aggregate.distinctHeavy("age");\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"uniqueHeavy"})," is an alias for ",(0,t.jsx)(n.code,{children:"distinctHeavy"})," method."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.RP)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},5680:(e,n,a)=>{a.d(n,{RP:()=>d});var t=a(6540);function s(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var c=t.createContext({}),d=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},o={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=d(a),h=s,p=g["".concat(c,".").concat(h)]||g[h]||o[h]||i;return a?t.createElement(p,r(r({ref:n},u),{},{components:a})):t.createElement(p,r({ref:n},u))}));u.displayName="MDXCreateElement"}}]);