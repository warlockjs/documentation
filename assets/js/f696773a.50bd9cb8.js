"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[3659],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),h=a,m=u["".concat(i,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4956:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},s="Introduction",l={unversionedId:"warlock/http/introduction",id:"warlock/http/introduction",title:"Introduction",description:"Http Requests is the core of any web application. Warlock provides a simple and easy to use API to make HTTP requests.",source:"@site/docs/warlock/http/introduction.mdx",sourceDirName:"warlock/http",slug:"/warlock/http/introduction",permalink:"/docs/warlock/http/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"warlock",previous:{title:"Http Requests",permalink:"/docs/category/http-requests"},next:{title:"Routes",permalink:"/docs/warlock/http/routes"}},i={},p=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Middleware",id:"middleware",level:2},{value:"Handler Or Controller?",id:"handler-or-controller",level:2},{value:"Function Handlers VS Class Handlers",id:"function-handlers-vs-class-handlers",level:2},{value:"Using Handlers",id:"using-handlers",level:3},{value:"Using Class Handlers",id:"using-class-handlers",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Http Requests is the core of any web application. Warlock provides a simple and easy to use API to make HTTP requests."),(0,a.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,a.kt)("p",null,"Following the steps of ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.fastify.io/"},"Fastify"),", Warlock uses the same concept of ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," objects."),(0,a.kt)("p",null,"So when you make a request, Warlock will create a ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," object that contains all the information about the request, and a ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," object that contains all the information about the response."),(0,a.kt)("p",null,"Let's see a simple example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/general/routes.ts"',title:'"src/app/general/routes.ts"'},'import { router, Request, Response } from "@warlock.js/core";\n\nrouter.get("/", (request: Request, response: Response) => {\n  return response.success({\n    message: "Hello World",\n  });\n});\n')),(0,a.kt)("p",null,"Nothing special here, we just created a simple route that returns a success response with a message ",(0,a.kt)("inlineCode",{parentName:"p"},"Hello World"),"."),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"Simply, we define our ",(0,a.kt)("a",{parentName:"p",href:"./routes"},"app routes")," to define which handlers will be executed when a request is made to a specific route."),(0,a.kt)("p",null,"When a request is made, Warlock will check if there is a route that matches the request URL, if there is a match, then it will execute the handler and return the response."),(0,a.kt)("h2",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Middleware is a function that will be executed before the handler, it's used to modify the request or the response, or to execute some code before the handler."),(0,a.kt)("p",null,"So we can define the http cycle as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Define the routes"),(0,a.kt)("li",{parentName:"ol"},"Execute the middleware (if exists)"),(0,a.kt)("li",{parentName:"ol"},"Execute the handler that receives the request and returns the response"),(0,a.kt)("li",{parentName:"ol"},"Send the response")),(0,a.kt)("h2",{id:"handler-or-controller"},"Handler Or Controller?"),(0,a.kt)("p",null,"Both has the same meaning, we prefer to use the term ",(0,a.kt)("inlineCode",{parentName:"p"},"request handler")," but for more other programming languages standards, we store all ",(0,a.kt)("inlineCode",{parentName:"p"},"handlers")," inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"controllers")," directory."),(0,a.kt)("h2",{id:"function-handlers-vs-class-handlers"},"Function Handlers VS Class Handlers"),(0,a.kt)("p",null,"In such programming language as ",(0,a.kt)("inlineCode",{parentName:"p"},"Typescript")," (Yes typescript not javascript), we can use both paradigms, so let's see the difference between them."),(0,a.kt)("h3",{id:"using-handlers"},"Using Handlers"),(0,a.kt)("p",null,"Handlers are great for simple routes that does a simple task and for decoupling the code, it makes perfect sense to use it for a ",(0,a.kt)("inlineCode",{parentName:"p"},"login")," route for instance, we just need to validate the request and return the response."),(0,a.kt)("h2",{id:"using-class-handlers"},"Using Class Handlers"),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"Warlock"),", we prefer using ",(0,a.kt)("inlineCode",{parentName:"p"},"classes")," when it comes to ",(0,a.kt)("inlineCode",{parentName:"p"},"RESTful")," APIs, because it makes it easier to maintain the code and to add more features to the same route."),(0,a.kt)("p",null,"That's why we ",(0,a.kt)("a",{parentName:"p",href:"./restful"},"introduced Restful Classes")," that makes it easier to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"RESTful")," API with around 6 routes in a single class."))}d.isMDXComponent=!0}}]);