"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[1074],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=i,f=p["".concat(c,".").concat(u)]||p[u]||m[u]||r;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:12},o="Master Mind",l={unversionedId:"cascade/advanced/master-mind",id:"cascade/advanced/master-mind",title:"Master Mind",description:"Introduction",source:"@site/docs/cascade/advanced/master-mind.mdx",sourceDirName:"cascade/advanced",slug:"/cascade/advanced/master-mind",permalink:"/docs/cascade/advanced/master-mind",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"mongodb",previous:{title:"Auto Increment",permalink:"/docs/cascade/advanced/auto-increment"},next:{title:"TODO",permalink:"/docs/cascade/advanced/todo"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Master Mind Collection",id:"master-mind-collection",level:2},{value:"Get last id",id:"get-last-id",level:2},{value:"Generate next id",id:"generate-next-id",level:2}],s={toc:d},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"master-mind"},"Master Mind"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MasterMind")," is helper class that is fully dedicated to manage the model ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," field, it is used internally by the model class to keep tracking of generated ids and gets the proper next id."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For SQL People, consider it more likely the ",(0,i.kt)("inlineCode",{parentName:"p"},"INFORMATION_SCHEMA")," table.")),(0,i.kt)("h2",{id:"master-mind-collection"},"Master Mind Collection"),(0,i.kt)("p",null,"Any model that is being saved, the model's collection name and the last saved id are stored in ",(0,i.kt)("inlineCode",{parentName:"p"},"MasterMind")," collection, the purpose of this collection is to keep tracking of the last saved id for each collection"),(0,i.kt)("h2",{id:"get-last-id"},"Get last id"),(0,i.kt)("p",null,"If you want to get the last id of any collection, consider the following snippet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"src/app.ts","src/app.ts":!0},'import { masterMind } from "@warlock.js/cascade";\n\nasync function main() {\n  const lastId = await masterMind.getLastId("categories");\n\n  console.log(lastId); // 512344\n}\n\nmain();\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"We imported ",(0,i.kt)("inlineCode",{parentName:"p"},"masterMind")," as an object, if you want to create a new instance of it, you may import ",(0,i.kt)("inlineCode",{parentName:"p"},"MasterMind")," class instead.")),(0,i.kt)("h2",{id:"generate-next-id"},"Generate next id"),(0,i.kt)("p",null,"To generate the next id of any collection, consider the following snippet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"src/app.ts","src/app.ts":!0},'import { masterMind } from "@warlock.js/cascade";\n\nasync function main() {\n  const initialId = 1;\n  const incrementBy = 1;\n  const nextId = await masterMind.getNextId(\n    "categories",\n    initialId,\n    incrementBy\n  );\n\n  console.log(nextId); // 1\n\n  const nextId2 = await masterMind.getNextId(\n    "categories",\n    initialId,\n    incrementBy\n  );\n\n  console.log(nextId); // 2\n}\n\nmain();\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"getNextId")," method accepts three arguments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"collectionName"),": The collection name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"initialId"),": The initial id value, it will be used if the collection name does not exist in the ",(0,i.kt)("inlineCode",{parentName:"li"},"MasterMind")," collection"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"incrementBy"),": The increment value, it will be used if the collection name does not exist in the ",(0,i.kt)("inlineCode",{parentName:"li"},"MasterMind")," collection")))}m.isMDXComponent=!0}}]);