"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9581],{4568:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=n(4848),a=n(8453);const i={sidebar_position:5},s="Localization Utils",r={id:"warlock/localization/utils",title:"Localization Utils",description:"This section of documentation covers various functions that can be used for localization.",source:"@site/docs/warlock/localization/utils.mdx",sourceDirName:"warlock/localization",slug:"/warlock/localization/utils",permalink:"/docs/warlock/localization/utils",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"warlock",previous:{title:"Using Translations",permalink:"/docs/warlock/localization/using-translations"},next:{title:"Uploads",permalink:"/docs/category/uploads"}},c={},l=[{value:"Get Localized Value",id:"get-localized-value",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"localization-utils",children:"Localization Utils"}),"\n",(0,o.jsx)(t.p,{children:"This section of documentation covers various functions that can be used for localization."}),"\n",(0,o.jsx)(t.h2,{id:"get-localized-value",children:"Get Localized Value"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"getLocalized"})," is a function that receives an array of ",(0,o.jsx)(t.a,{href:"./introduction#Localized-data",children:"Localized data"})," and returns the value of the given locale code."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="src/app/main.ts"',children:'import { getLocalized } from "@warlock.js/core";\r\n\r\nconst name = [\r\n  {\r\n    localeCode: "en",\r\n    value: "John Doe",\r\n  },\r\n  {\r\n    localeCode: "ar",\r\n    value: "\u062c\u0648\u0646 \u062f\u0648",\r\n  },\r\n];\r\n\r\nconsole.log(getLocalized(name, "en")); // returns "John Doe"\n'})}),"\n",(0,o.jsx)(t.p,{children:"This could be handy function if you want to retrieve the value of a localized data but not to wait to the output to convert it based on current locale code."}),"\n",(0,o.jsxs)(t.p,{children:["If the second argument is not passed and the function is called within a ",(0,o.jsx)(t.a,{href:"./../http/request-context",children:"Request Context"})," then it will return the value of the current locale code."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",metastring:'title="src/app/posts/controllers/get-post.ts"',children:'import { getLocalized, Request, Response } from "@warlock.js/core";\r\nimport { Post } from "app/posts/models/post";\r\n\r\nexport default async function getPost(request: Request, response: Response) {\r\n  const post = await Post.find(request.params.id);\r\n\r\n  return {\r\n    title: getLocalized(post.title),\r\n    content: getLocalized(post.content),\r\n  };\r\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const a={},i=o.createContext(a);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);