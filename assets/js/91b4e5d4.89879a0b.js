"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[2019],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function u(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=o(a),d=l,m=c["".concat(s,".").concat(d)]||c[d]||g[d]||r;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[c]="string"==typeof e?e:l,i[1]=u;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8950:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>u,toc:()=>o});var n=a(7462),l=(a(7294),a(3905));const r={sidebar_position:9},i="Advanced Usage",u={unversionedId:"monpulse/aggregate/advanced",id:"monpulse/aggregate/advanced",title:"Advanced Usage",description:"Aggregate class is also shipped with more useful methods to help you use queries easily.",source:"@site/docs/monpulse/aggregate/advanced.mdx",sourceDirName:"monpulse/aggregate",slug:"/monpulse/aggregate/advanced",permalink:"/docs/monpulse/aggregate/advanced",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mongodb",previous:{title:"Lookup (Joins)",permalink:"/docs/monpulse/aggregate/lookup"},next:{title:"Delete Documents",permalink:"/docs/monpulse/aggregate/delete"}},s={},o=[{value:"Min",id:"min",level:2},{value:"Get Max value",id:"get-max-value",level:2},{value:"Get Average value",id:"get-average-value",level:2},{value:"Get Sum value",id:"get-sum-value",level:2},{value:"Get distinct values",id:"get-distinct-values",level:2},{value:"Get Distinct Heavy Values",id:"get-distinct-heavy-values",level:2}],p={toc:o},c="wrapper";function g(e){let{components:t,...a}=e;return(0,l.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"advanced-usage"},"Advanced Usage"),(0,l.kt)("p",null,"Aggregate class is also shipped with more useful methods to help you use queries easily."),(0,l.kt)("h2",{id:"min"},"Min"),(0,l.kt)("p",null,"To get minimum value of a field, we can use ",(0,l.kt)("inlineCode",{parentName:"p"},"min")," method."),(0,l.kt)("p",null,"Method Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"public min(field: string): number;\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const minAge = await aggregate.min("age");\n')),(0,l.kt)("p",null,"This will return the minimum age of all users."),(0,l.kt)("h2",{id:"get-max-value"},"Get Max value"),(0,l.kt)("p",null,"To get maximum value of a field, we can use ",(0,l.kt)("inlineCode",{parentName:"p"},"max")," method."),(0,l.kt)("p",null,"Method Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"public max(field: string): number;\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const maxAge = await aggregate.max("age");\n')),(0,l.kt)("h2",{id:"get-average-value"},"Get Average value"),(0,l.kt)("p",null,"To get average value of a field, we can use ",(0,l.kt)("inlineCode",{parentName:"p"},"avg")," method."),(0,l.kt)("p",null,"Method Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"public avg(field: string): number;\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const avgAge = await aggregate.avg("age");\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"average")," is an alias for ",(0,l.kt)("inlineCode",{parentName:"p"},"avg")," method.")),(0,l.kt)("h2",{id:"get-sum-value"},"Get Sum value"),(0,l.kt)("p",null,"To get sum value of a field, we can use ",(0,l.kt)("inlineCode",{parentName:"p"},"sum")," method."),(0,l.kt)("p",null,"Method Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"public sum(field: string): number;\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const totalSalaries = await aggregate.sum("salary");\n')),(0,l.kt)("p",null,"We can also use filters with it as well by using ",(0,l.kt)("inlineCode",{parentName:"p"},"where")," method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const totalSalaries = await aggregate.where("age", ">", 20).sum("salary");\n')),(0,l.kt)("h2",{id:"get-distinct-values"},"Get distinct values"),(0,l.kt)("p",null,"To get distinct values of a field, we can use ",(0,l.kt)("inlineCode",{parentName:"p"},"distinct")," method."),(0,l.kt)("p",null,"Method Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"public distinct(field: string): any[];\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const distinctAges = await aggregate.distinct("age");\n')),(0,l.kt)("p",null,"It will return an array of values."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Please note that if the field has a null value, it will be returned as well.")),(0,l.kt)("p",null,"You can also use ",(0,l.kt)("inlineCode",{parentName:"p"},"unique")," method as an alias to it."),(0,l.kt)("h2",{id:"get-distinct-heavy-values"},"Get Distinct Heavy Values"),(0,l.kt)("p",null,"This method is similar to ",(0,l.kt)("inlineCode",{parentName:"p"},"distinct")," method, but it will return the distinct values without the ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," values."),(0,l.kt)("p",null,"Method Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"public distinctHeavy(field: string): any[];\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const distinctAges = await aggregate.distinctHeavy("age");\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"uniqueHeavy")," is an alias for ",(0,l.kt)("inlineCode",{parentName:"p"},"distinctHeavy")," method.")))}g.isMDXComponent=!0}}]);