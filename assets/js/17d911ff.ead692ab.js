"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4524],{351:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>h});var c=n(4848),t=n(8453);const a={sidebar_position:4},i="Cache Driver Interface",s={id:"warlock/cache/cache-driver-interface",title:"Cache Driver Interface",description:"The following schema represents the interface of any cache driver implementation.",source:"@site/docs/warlock/cache/cache-driver-interface.mdx",sourceDirName:"warlock/cache",slug:"/warlock/cache/cache-driver-interface",permalink:"/docs/warlock/cache/cache-driver-interface",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"warlock",previous:{title:"Cache Manager",permalink:"/docs/warlock/cache/cache-manager"},next:{title:"Base Cache Driver",permalink:"/docs/warlock/cache/base-cache-driver"}},o={},h=[];function l(e){const r={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.h1,{id:"cache-driver-interface",children:"Cache Driver Interface"}),"\n",(0,c.jsx)(r.p,{children:"The following schema represents the interface of any cache driver implementation."}),"\n",(0,c.jsxs)(r.p,{children:["If you are going to ",(0,c.jsx)(r.a,{href:"./make-your-own-cache-driver",children:"create a custom cache driver"})," make sure to implement this interface."]}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-ts",children:"export interface CacheDriver<ClientType, Options> {\r\n  /**\r\n   * The cache driver options\r\n   */\r\n  options: Options;\r\n  /**\r\n   *  Remove all cached items by namespace\r\n   */\r\n  removeNamespace(namespace: string): Promise<any>;\r\n  /**\r\n   * Set the cache driver options\r\n   */\r\n  setOptions(options: Options): any;\r\n  /**\r\n   * Parse the key to be used in the cache\r\n   */\r\n  parseKey(key: string | GenericObject): string;\r\n  /**\r\n   * Set a value in the cache\r\n   *\r\n   * @param key The cache key, could be an object or string\r\n   * @param value The value to be stored in the cache\r\n   * @param ttl The time to live in seconds\r\n   */\r\n  set(key: string | GenericObject, value: any, ttl?: number): Promise<any>;\r\n  /**\r\n   * Get a value from the cache\r\n   */\r\n  get(key: string | GenericObject): Promise<any>;\r\n  /**\r\n   * Remove a value from the cache\r\n   */\r\n  remove(key: string | GenericObject): Promise<void>;\r\n  /**\r\n   * Flush the entire cache\r\n   */\r\n  flush(): Promise<void>;\r\n  /**\r\n   * Connect to the cache driver\r\n   */\r\n  connect(): Promise<any>;\r\n  /**\r\n   * The cache client\r\n   */\r\n  client?: ClientType;\r\n}\n"})}),"\n",(0,c.jsxs)(r.p,{children:["The client type here represents a high level access for the cache client, for example the ",(0,c.jsx)(r.a,{href:"./redis",children:"Redis Cache Driver"}),"'s client is ",(0,c.jsx)(r.a,{href:"https://www.npmjs.com/package/redis",children:"Redis Client"}),"."]})]})}function d(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>s});var c=n(6540);const t={},a=c.createContext(t);function i(e){const r=c.useContext(a);return c.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),c.createElement(a.Provider,{value:r},e.children)}}}]);