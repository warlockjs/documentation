"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[4626],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7181:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:33},l="Create Your Own Rule",i={unversionedId:"warlock/validation/rules/create-your-own-rule",id:"warlock/validation/rules/create-your-own-rule",title:"Create Your Own Rule",description:"To create a new rule, you need to create a class that extends the Rule class.",source:"@site/docs/warlock/validation/rules/create-your-own-rule.mdx",sourceDirName:"warlock/validation/rules",slug:"/warlock/validation/rules/create-your-own-rule",permalink:"/docs/warlock/validation/rules/create-your-own-rule",draft:!1,tags:[],version:"current",sidebarPosition:33,frontMatter:{sidebar_position:33},sidebar:"warlock",previous:{title:"Url",permalink:"/docs/warlock/validation/rules/url"},next:{title:"Validation errors",permalink:"/docs/warlock/validation/validation-errors"}},s={},u=[{value:"Error method",id:"error-method",level:2},{value:"Usage",id:"usage",level:2},{value:"Error placeholder",id:"error-placeholder",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-your-own-rule"},"Create Your Own Rule"),(0,a.kt)("p",null,"To create a new rule, you need to create a class that extends the ",(0,a.kt)("inlineCode",{parentName:"p"},"Rule")," class."),(0,a.kt)("p",null,"Let's create a rule that validates phone number to start with ",(0,a.kt)("inlineCode",{parentName:"p"},"+2")," as optional then ",(0,a.kt)("inlineCode",{parentName:"p"},"01")," then ",(0,a.kt)("inlineCode",{parentName:"p"},"0|1|2|5")," then 8 digits."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/general/validation/phone.ts"',title:'"src/app/general/validation/phone.ts"'},'import { Rule } from "@warlock.js/core";\n\nexport class PhoneNumberRule extends Rule {\n  /**\n   * Rule name\n   */\n  public static ruleName = "phoneNumber";\n\n  /**\n   * Validate the rule\n   */\n  public async validate() {\n    const phoneNumber = this.value; // the input value\n    const regex = /^(?:\\+2)?01[0125]\\d{8}$/;\n\n    this.isValid = regex.test(phoneNumber);\n  }\n\n  /**\n   * Get error message\n   */\n  public error() {\n    return this.trans("phoneNumber");\n  }\n}\n')),(0,a.kt)("p",null,"Let's explain the code above:"),(0,a.kt)("p",null,"First, we defined the ",(0,a.kt)("inlineCode",{parentName:"p"},"ruleName"),", it's mandatory to be unique to not make any conflicts with other validation rules."),(0,a.kt)("p",null,"Then we defined the ",(0,a.kt)("inlineCode",{parentName:"p"},"validate")," method, this is async method that will be called when validating the input."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," property is the input's value that is taken from the request payload."),(0,a.kt)("p",null,"Then we wrote down our regular expression to validate the phone number."),(0,a.kt)("p",null,"Finally, ",(0,a.kt)("inlineCode",{parentName:"p"},"isValid")," property is used to indicate if the input is valid or not."),(0,a.kt)("h2",{id:"error-method"},"Error method"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"error")," method is used to return the error message if the input is invalid."),(0,a.kt)("p",null,"We used ",(0,a.kt)("inlineCode",{parentName:"p"},"trans")," method that is inherited from the ",(0,a.kt)("inlineCode",{parentName:"p"},"Rule")," class, this method is used to translate the error message."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"trans")," method receives the validation key error that will be used for translation, in our case we'll call it ",(0,a.kt)("inlineCode",{parentName:"p"},"phoneNumber"),", now let's define the validation error message."),(0,a.kt)("p",null,"Go to ",(0,a.kt)("inlineCode",{parentName:"p"},"src/app/general/utils/locales.ts")," and add the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/general/utils/locales.ts"',title:'"src/app/general/utils/locales.ts"'},'import { groupedTranslation } from "@mongez/localization":\n\ngroupedTranslation("validation", {\n    phoneNumber: {\n        en: "Invalid phone number",\n        ar: "\u0631\u0642\u0645 \u0627\u0644\u0647\u0627\u062a\u0641 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d",\n        // any other locale code\n    }\n});\n')),(0,a.kt)("p",null,"Now let's add it to our validation configurations:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/validation.ts"',title:'"src/config/validation.ts"'},'import { PhoneNumberRule } from "app/general/validation/phone";\nimport type { ValidationConfigurations } from "@warlock.js/core";\n\nconst validationConfigurations: ValidationConfigurations = {\n  rules: {\n    phoneNumber: PhoneNumberRule,\n    // rest of rules\n  },\n  //...\n};\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To use it, add it to the validation rules in any handler, let's do it in the ",(0,a.kt)("inlineCode",{parentName:"p"},"create-account")," handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/users/controllers/auth/create-account.ts"',title:'"src/app/users/controllers/auth/create-account.ts"'},'import { Request, Response } from "@warlock.js/core";\nimport { User } from "app/users/models/user";\n\nexport default async function createAccount(\n  request: Request,\n  response: Response\n) {\n  // do logic here\n}\n\ncreateAccount.validation = {\n  rules: {\n    email: ["required", "email"],\n    password: ["required", "string"],\n    phoneNumber: ["required", "phoneNumber"],\n  },\n};\n')),(0,a.kt)("h2",{id:"error-placeholder"},"Error placeholder"),(0,a.kt)("p",null,"When calling any error, it receives a placeholder object that contains by default ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," key which contains the input name and ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," which holds the current input value."),(0,a.kt)("p",null,"Also, we can pass to ",(0,a.kt)("inlineCode",{parentName:"p"},"trans")," method an object to add more placeholders, for example this is the ",(0,a.kt)("inlineCode",{parentName:"p"},"error")," method in the ",(0,a.kt)("a",{parentName:"p",href:"./min-length"},"minLength Rule")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'\n\n  /**\n   * Get error message\n   */\n  public error() {\n    return this.trans("minLength", {\n      min: this.options[0],\n    });\n  }\n')),(0,a.kt)("p",null,"By defining this we can now use the following placeholder in the translation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'groupedTranslation("validation", {\n  minLength: {\n    en: "The :input must be at least :min characters",\n    ar: "\u064a\u062c\u0628 \u0623\u0646 \u064a\u0643\u0648\u0646 :input \u0639\u0644\u0649 \u0627\u0644\u0623\u0642\u0644 :min \u0623\u062d\u0631\u0641",\n    // any other locale code\n  },\n});\n')))}d.isMDXComponent=!0}}]);