"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[2184],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),d=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||a;return n?o.createElement(h,l(l({ref:t},s),{},{components:n})):o.createElement(h,l({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var d=2;d<a;d++)l[d]=n[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:4},l="Upload Model",i={unversionedId:"warlock/upload/upload-model",id:"warlock/upload/upload-model",title:"Upload Model",description:"Warlock is shipped with Upload model to store the uploaded files in the database.",source:"@site/docs/warlock/upload/upload-model.mdx",sourceDirName:"warlock/upload",slug:"/warlock/upload/upload-model",permalink:"/mongez/docs/warlock/upload/upload-model",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"warlock",previous:{title:"Deleting Files",permalink:"/mongez/docs/warlock/upload/deleting-files"},next:{title:"Getting Uploaded Files",permalink:"/mongez/docs/warlock/upload/getting-uploaded-files"}},p={},d=[{value:"Stored data",id:"stored-data",level:2},{value:"Upload output",id:"upload-output",level:2}],s={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"upload-model"},"Upload Model"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Warlock")," is shipped with ",(0,r.kt)("inlineCode",{parentName:"p"},"Upload")," model to store the uploaded files in the database."),(0,r.kt)("p",null,"When a ",(0,r.kt)("a",{parentName:"p",href:"/mongez/docs/warlock/upload/uploading-files"},"file")," is uploaded, it will be stored in the database using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Upload")," model."),(0,r.kt)("h2",{id:"stored-data"},"Stored data"),(0,r.kt)("p",null,"The following schema is stored inside the uploads collection for each uploaded file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hash": "string",\n  "name": "string",\n  "size": "number",\n  "extension": "string",\n  "path": "string",\n  "directory": "string",\n  "mimeType": "string"\n}\n')),(0,r.kt)("p",null,"If the uploaded file is an image, then ",(0,r.kt)("inlineCode",{parentName:"p"},"width")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," will be stored as well."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," is stored in bytes."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"file name")," will be stored as-is from the upload request, this is has nothing related to whether if the uploaded file is stored with its name or randomly."),(0,r.kt)("h2",{id:"upload-output"},"Upload output"),(0,r.kt)("p",null,"When the upload model is sent to the response, the ",(0,r.kt)("inlineCode",{parentName:"p"},"UploadOutput")," will return the following data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "string",\n  "hash": "string",\n  "name": "string",\n  "size": "number",\n  "extension": "string",\n  "url": "string",\n  "mimeType": "string",\n  "width": "number",\n  "height": "number"\n}\n')),(0,r.kt)("p",null,"The id and hash are both the same, so you can use either of them."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," is the full URL to the uploaded file, it's generated by passing the file ",(0,r.kt)("inlineCode",{parentName:"p"},"path")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"uploadsUrl")," function."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"width")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," are only returned if the uploaded file is an image."))}c.isMDXComponent=!0}}]);