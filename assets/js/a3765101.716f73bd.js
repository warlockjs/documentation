"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[2628],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||c;return t?a.createElement(g,i(i({ref:n},d),{},{components:t})):a.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=m;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[p]="string"==typeof e?e:o,i[1]=r;for(var l=2;l<c;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9518:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});var a=t(7462),o=(t(7294),t(3905));const c={sidebar_position:4},i="Connecting To Database",r={unversionedId:"cascade/getting-started/connecting-to-database",id:"cascade/getting-started/connecting-to-database",title:"Connecting To Database",description:"Connecting to a database is easy. You can use the connectToDatabase method to connect to a database. The connect method accepts a single argument, which is the name of the database you want to connect to.",source:"@site/docs/cascade/getting-started/connecting-to-database.mdx",sourceDirName:"cascade/getting-started",slug:"/cascade/getting-started/connecting-to-database",permalink:"/docs/cascade/getting-started/connecting-to-database",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mongodb",previous:{title:"Installation",permalink:"/docs/cascade/getting-started/installation"},next:{title:"Queries",permalink:"/docs/category/queries"}},s={},l=[{value:"Building Url Connection",id:"building-url-connection",level:2},{value:"Using Connection Url",id:"using-connection-url",level:2},{value:"Singleton Connection",id:"singleton-connection",level:2},{value:"Creating more than one connection",id:"creating-more-than-one-connection",level:2},{value:"Once connected",id:"once-connected",level:2}],d={toc:l},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connecting-to-database"},"Connecting To Database"),(0,o.kt)("p",null,"Connecting to a database is easy. You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToDatabase")," method to connect to a database. The ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," method accepts a single argument, which is the name of the database you want to connect to."),(0,o.kt)("h2",{id:"building-url-connection"},"Building Url Connection"),(0,o.kt)("p",null,"If you want to make it simple, you can easily pass the database connection url segments, which contains: ",(0,o.kt)("inlineCode",{parentName:"p"},"host"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"port"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"username"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"password"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"dbAuth"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { connectToDatabase } from "@warlock.js/cascade";\n\nconnectToDatabase({\n  host: "localhost",\n  port: 27017,\n  database: "my-database",\n  username: "my-username",\n  password: "my-password",\n  dbAuth: "admin",\n});\n')),(0,o.kt)("p",null,"These are the minimum configurations needed to connect to MongoDB server, but you can pass more options to the ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToDatabase")," function that receives the same options as the ",(0,o.kt)("inlineCode",{parentName:"p"},"MongoClient")," instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{10,11}","{10,11}":!0},'import { connectToDatabase } from "@warlock.js/cascade";\n\nconnectToDatabase({\n  host: "localhost",\n  port: 27017,\n  database: "my-database",\n  username: "my-username",\n  password: "my-password",\n  dbAuth: "admin",\n  retryWrites: true,\n  replicaSet: "rs0",\n});\n')),(0,o.kt)("h2",{id:"using-connection-url"},"Using Connection Url"),(0,o.kt)("p",null,"Alternatively, you can pass the connection url directly to the ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToDatabase")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { connectToDatabase } from "@warlock.js/cascade";\n\nconnectToDatabase({\n  url: "mongodb://localhost:27017/my-database",\n  database: "my-database",\n});\n')),(0,o.kt)("h2",{id:"singleton-connection"},"Singleton Connection"),(0,o.kt)("p",null,"Using ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToDatabase")," will ensure that connection is established only once ",(0,o.kt)("inlineCode",{parentName:"p"},"Singleton Pattern"),", and will ignore any other calls to the ",(0,o.kt)("inlineCode",{parentName:"p"},"connectToDatabase")," function."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you want to use multiple database, you don't need to create multiple connections, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"useDatabase")," method to switch between databases.")),(0,o.kt)("h2",{id:"creating-more-than-one-connection"},"Creating more than one connection"),(0,o.kt)("p",null,"In some situations, you might need to create multiple connections per project, in that sense you can manually create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"Connection")," instance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Connection } from "@warlock.js/cascade";\n\nconst connection = new Connection();\n\nconnection.connect({\n  // same configurations as the connectToDatabase function\n});\n')),(0,o.kt)("h2",{id:"once-connected"},"Once connected"),(0,o.kt)("p",null,"Sometimes you want to execute a code when the connection is established, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"onceConnected")," method to execute a callback when the connection is established."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { onceConnected } from "@warlock.js/cascade";\n\nonceConnected(() => {\n  // do something\n});\n')),(0,o.kt)("p",null,"If the connection is not established yet, the callback will be added to the queue, and will be executed once the connection is established, otherwise it will be executed immediately."))}u.isMDXComponent=!0}}]);