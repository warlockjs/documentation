"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[8034],{7239:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>h});var n=a(4848),c=a(5680);const t={sidebar_position:3},i="Cache Manager",s={id:"warlock/cache/cache-manager",title:"Cache Manager",description:"This is the core of the entire cache ecosystem. It is responsible for managing the cache drivers, and the cache configurations.",source:"@site/docs/warlock/cache/cache-manager.mdx",sourceDirName:"warlock/cache",slug:"/warlock/cache/cache-manager",permalink:"/docs/warlock/cache/cache-manager",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"warlock",previous:{title:"Cache Configurations",permalink:"/docs/warlock/cache/configurations"},next:{title:"Cache Driver Interface",permalink:"/docs/warlock/cache/cache-driver-interface"}},o={},h=[{value:"Setting Configurations",id:"setting-configurations",level:2},{value:"Initializing the cache manager",id:"initializing-the-cache-manager",level:2},{value:"Cache Manager is a Cache Driver",id:"cache-manager-is-a-cache-driver",level:2},{value:"Get current driver",id:"get-current-driver",level:2},{value:"Set default driver",id:"set-default-driver",level:2},{value:"Get driver",id:"get-driver",level:2},{value:"Global prefix",id:"global-prefix",level:2},{value:"Setting a value in the cache",id:"setting-a-value-in-the-cache",level:2},{value:"Getting a value from the cache",id:"getting-a-value-from-the-cache",level:2},{value:"Removing a value from the cache",id:"removing-a-value-from-the-cache",level:2},{value:"Removing all values from the cache",id:"removing-all-values-from-the-cache",level:2},{value:"Namespaces",id:"namespaces",level:2},{value:"Removing all values from a namespace",id:"removing-all-values-from-a-namespace",level:3}];function l(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"cache-manager",children:"Cache Manager"}),"\n",(0,n.jsx)(r.p,{children:"This is the core of the entire cache ecosystem. It is responsible for managing the cache drivers, and the cache configurations."}),"\n",(0,n.jsxs)(r.p,{children:["You can access the cache manager by importing ",(0,n.jsx)(r.code,{children:"cache"})," from warlock."]}),"\n",(0,n.jsx)(r.h2,{id:"setting-configurations",children:"Setting Configurations"}),"\n",(0,n.jsxs)(r.p,{children:["After you define ",(0,n.jsx)(r.a,{href:"./configurations",children:"Cache Configurations"}),", you can set them using the ",(0,n.jsx)(r.code,{children:"setConfigurations"})," method."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",metastring:'title="src/config/cache.ts"',children:'import { CacheConfigurations } from "@warlock.js/core";\r\nconst cacheConfigurations: CacheConfigurations = {\r\n  //...\r\n};\r\n\r\nexport default cacheConfigurations;\n'})}),"\n",(0,n.jsx)(r.p,{children:"The configuration will be automatically loaded when the cache manager is initialized."}),"\n",(0,n.jsx)(r.h2,{id:"initializing-the-cache-manager",children:"Initializing the cache manager"}),"\n",(0,n.jsxs)(r.p,{children:["By default ",(0,n.jsx)(r.code,{children:"Warlock"})," initializes the cache manager to start connecting to the default driver when the ",(0,n.jsx)(r.code,{children:"http server"})," is about to start so you don't really need to take any action in this regard."]}),"\n",(0,n.jsx)(r.h2,{id:"cache-manager-is-a-cache-driver",children:"Cache Manager is a Cache Driver"}),"\n",(0,n.jsxs)(r.p,{children:["All methods that are available on ",(0,n.jsx)(r.a,{href:"./cache-driver-interface",children:"Cache Driver"})," are available on the cache manager so you will be able to use the cache manager as a cache driver."]}),"\n",(0,n.jsx)(r.h2,{id:"get-current-driver",children:"Get current driver"}),"\n",(0,n.jsxs)(r.p,{children:["If you want to directly access the current cache driver from the cache manager, use ",(0,n.jsx)(r.code,{children:"currentDriver"})," property."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\nconst currentDriver = cache.currentDriver;\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["If there is no current driver, then the cache manager will use the ",(0,n.jsx)(r.a,{href:"./null",children:"NullCacheDriver"})," instead."]})}),"\n",(0,n.jsx)(r.h2,{id:"set-default-driver",children:"Set default driver"}),"\n",(0,n.jsxs)(r.p,{children:["To change the default driver, use ",(0,n.jsx)(r.code,{children:"use"})," method, this method accepts the driver name Defined in ",(0,n.jsx)(r.a,{href:"./configurations#drivers",children:" Cache drivers list"})," or pass the driver object directly."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\ncache.use("redis");\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["Please note that ",(0,n.jsx)(r.code,{children:"use"})," method is a ",(0,n.jsx)(r.code,{children:"async"})," method, as if the driver was not loaded before, the cache manager will load it first before using it so make sure to use ",(0,n.jsx)(r.code,{children:"await"})," keyword when calling this method."]})}),"\n",(0,n.jsx)(r.h2,{id:"get-driver",children:"Get driver"}),"\n",(0,n.jsxs)(r.p,{children:["To get another cache driver (but not set it as a default driver) use ",(0,n.jsx)(r.code,{children:"driver"})," method, it accepts the driver name."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",metastring:'title="src/main.ts"',children:'import { cache } from "@warlock.js/core";\r\n\r\nasync function main() {\r\n  const redisDriver = await cache.driver("redis");\r\n\r\n  const memoryDriver = await cache.driver("memory");\r\n}\r\n\r\nmain();\n'})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"If the driver is not loaded before, the cache manager will load it first before returning it."})}),"\n",(0,n.jsx)(r.admonition,{type:"danger",children:(0,n.jsxs)(r.p,{children:["If the given driver name is listed in ",(0,n.jsx)(r.a,{href:"./configurations#drivers",children:" Cache drivers list"}),", it will throw an error."]})}),"\n",(0,n.jsx)(r.h2,{id:"global-prefix",children:"Global prefix"}),"\n",(0,n.jsx)(r.p,{children:"Global prefix option is implemented in all built-in drivers, it highly recommended to use it as a way to avoid key conflicts especially if you're using a common cache driver like redis."}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"Consider a global prefix as a database name in a database server, it is used to separate the keys from each other."})}),"\n",(0,n.jsx)(r.h2,{id:"setting-a-value-in-the-cache",children:"Setting a value in the cache"}),"\n",(0,n.jsxs)(r.p,{children:["To set a value in the cache, use ",(0,n.jsx)(r.code,{children:"set"})," method, this method accepts three parameters:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"The first one is the key that will be used to store the value in the cache."}),"\n",(0,n.jsx)(r.li,{children:"The second one is the value that will be stored in the cache."}),"\n",(0,n.jsx)(r.li,{children:"The third one is the number of seconds that the value will be stored in the cache."}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nawait cache.set("key", "value", 60 * 60 * 24);\n'})}),"\n",(0,n.jsx)(r.p,{children:"The value can be any type of value either a string, number, boolean, or even an object or an array."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nawait cache.set("key", { name: "John Doe" }, 60 * 60 * 24);\n'})}),"\n",(0,n.jsxs)(r.p,{children:["The key could be a ",(0,n.jsx)(r.code,{children:"string"})," or an object, if it is an object, it will be converted to a string using ",(0,n.jsx)(r.a,{href:"./utils#parse-cache-key",children:"Parse Cache Key utility"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nawait cache.set({ id: 1 }, { name: "John Doe" }, 60 * 60 * 24);\n'})}),"\n",(0,n.jsxs)(r.p,{children:["This will result a key like this : ",(0,n.jsx)(r.code,{children:"id.1"}),"."]}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsx)(r.p,{children:"If the global prefix is set, then it will be prefixed with the global prefix."})}),"\n",(0,n.jsxs)(r.p,{children:["If the third parameter is not set ",(0,n.jsx)(r.code,{children:"ttl"})," then the driver will try to capture it from the driver options, if not found then the value will be stored in the cache forever."]}),"\n",(0,n.jsx)(r.h2,{id:"getting-a-value-from-the-cache",children:"Getting a value from the cache"}),"\n",(0,n.jsxs)(r.p,{children:["To get a value from the cache, use ",(0,n.jsx)(r.code,{children:"get"})," method, this method accepts one parameter which is the key that will be used to get the value from the cache."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nconst value = await cache.get("key");\n'})}),"\n",(0,n.jsxs)(r.p,{children:["It can also accept an object as a key, it will be converted to a string using ",(0,n.jsx)(r.a,{href:"./utils#parse-cache-key",children:"Parse Cache Key utility"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nconst value = await cache.get({ id: 1 }); // this will be converted to id.1\n'})}),"\n",(0,n.jsxs)(r.p,{children:["If the key does not exists a ",(0,n.jsx)(r.code,{children:"null"})," value will be returned."]}),"\n",(0,n.jsx)(r.h2,{id:"removing-a-value-from-the-cache",children:"Removing a value from the cache"}),"\n",(0,n.jsxs)(r.p,{children:["To remove a value from the cache, use ",(0,n.jsx)(r.code,{children:"remove"})," method, this method accepts one parameter which is the key that will be used to remove the value from the cache."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nawait cache.remove("key");\n'})}),"\n",(0,n.jsxs)(r.p,{children:["It can also accept an object as a key, it will be converted to a string using ",(0,n.jsx)(r.a,{href:"./utils#parse-cache-key",children:"Parse Cache Key utility"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nawait cache.remove({ id: 1 }); // this will be converted to id.1\n'})}),"\n",(0,n.jsx)(r.h2,{id:"removing-all-values-from-the-cache",children:"Removing all values from the cache"}),"\n",(0,n.jsxs)(r.p,{children:["To clear the entire cache, use ",(0,n.jsx)(r.code,{children:"flush"})," method."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// somewhere in the project\r\nawait cache.flush();\n'})}),"\n",(0,n.jsx)(r.h2,{id:"namespaces",children:"Namespaces"}),"\n",(0,n.jsxs)(r.p,{children:["Another good approach that is powered by ",(0,n.jsx)(r.code,{children:"Warlock Cache"})," is namespaces, it allows you easily to categorize all the cached data by a namespace."]}),"\n",(0,n.jsxs)(r.p,{children:["A namespace is a string that is suffixed with a ",(0,n.jsx)(r.code,{children:"dot"})," then the key, for example, if we have a namespace called ",(0,n.jsx)(r.code,{children:"users"}),", then the key ",(0,n.jsx)(r.code,{children:"1"})," will be converted to ",(0,n.jsx)(r.code,{children:"users.1"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"removing-all-values-from-a-namespace",children:"Removing all values from a namespace"}),"\n",(0,n.jsxs)(r.p,{children:["To clear the entire cache for a namespace, use ",(0,n.jsx)(r.code,{children:"removeNamespace"})," method, this method accepts one parameter which is the namespace that will be used to remove the values from the cache."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:'import { cache } from "@warlock.js/core";\r\n\r\n// store a value in the cache\r\nawait cache.set("users.1", {\r\n  id: 1,\r\n  name: "John Doe",\r\n});\r\n\r\nawait cache.set("users.list", [\r\n  {\r\n    id: 1,\r\n    name: "John Doe",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: "Jane Doe",\r\n  },\r\n]);\r\n\r\n// somewhere in the project\r\nawait cache.removeNamespace("users");\n'})}),"\n",(0,n.jsxs)(r.p,{children:["This will clear out all the values that are stored under the ",(0,n.jsx)(r.code,{children:"users"})," namespace."]})]})}function d(e={}){const{wrapper:r}={...(0,c.RP)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},5680:(e,r,a)=>{a.d(r,{RP:()=>h});var n=a(6540);function c(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function t(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?t(Object(a),!0).forEach((function(r){c(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function s(e,r){if(null==e)return{};var a,n,c=function(e,r){if(null==e)return{};var a,n,c={},t=Object.keys(e);for(n=0;n<t.length;n++)a=t[n],r.indexOf(a)>=0||(c[a]=e[a]);return c}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)a=t[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var o=n.createContext({}),h=function(e){var r=n.useContext(o),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var a=e.components,c=e.mdxType,t=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=h(a),u=c,p=m["".concat(o,".").concat(u)]||m[u]||l[u]||t;return a?n.createElement(p,i(i({ref:r},d),{},{components:a})):n.createElement(p,i({ref:r},d))}));d.displayName="MDXCreateElement"}}]);