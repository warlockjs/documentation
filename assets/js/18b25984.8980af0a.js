"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3362],{1407:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var t=i(4848),s=i(8453);const o={sidebar_position:1},a="Indexing",d={id:"cascade/indexing/introduction",title:"Indexing",description:"Indexing In Any Database is essential for faster retrieval of data. Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. It is a data structure technique which is used to quickly locate and access the data in a database. Indexes are created using a few database columns.",source:"@site/docs/cascade/indexing/introduction.mdx",sourceDirName:"cascade/indexing",slug:"/cascade/indexing/introduction",permalink:"/docs/cascade/indexing/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mongodb",previous:{title:"Indexing",permalink:"/docs/category/indexing"},next:{title:"Blueprint",permalink:"/docs/cascade/indexing/blueprint"}},r={},c=[{value:"Blueprint",id:"blueprint",level:2},{value:"Model Blueprint",id:"model-blueprint",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"indexing",children:"Indexing"}),"\n",(0,t.jsx)(n.p,{children:"Indexing In Any Database is essential for faster retrieval of data. Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. It is a data structure technique which is used to quickly locate and access the data in a database. Indexes are created using a few database columns."}),"\n",(0,t.jsx)(n.p,{children:"Likely, MongoDB has pretty good indexing support. It supports various types of indexes like single field, compound, multi-key, geospatial, text, hashed, and wildcard indexes. In this section, we will learn about all these indexes in detail."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["For more information about indexes, please read the ",(0,t.jsx)(n.a,{href:"https://docs.mongodb.com/manual/indexes/",children:"MongoDB Indexes"})," documentation."]})}),"\n",(0,t.jsx)(n.h2,{id:"blueprint",children:"Blueprint"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MonPulse"})," introduces a ",(0,t.jsx)(n.code,{children:"Blueprint"})," class, this class easily allows you to create indexes on your collections. You can create indexes on a single field, multiple fields, and compound indexes."]}),"\n",(0,t.jsxs)(n.p,{children:["Full documentation could be found ",(0,t.jsx)(n.a,{href:"./blueprint",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"model-blueprint",children:"Model Blueprint"}),"\n",(0,t.jsx)(n.p,{children:"Alternatively, you can also create indexes on your models. This is a more convenient way to create indexes on your collections if you're using models (Which you should be)."}),"\n",(0,t.jsxs)(n.p,{children:["Full documentation could be found ",(0,t.jsx)(n.a,{href:"./model-blueprint",children:"here"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);