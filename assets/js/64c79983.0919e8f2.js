"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[5346],{6549:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var t=n(4848),i=n(5680);const s={sidebar_position:30},a="Unique",l={id:"warlock/validation/rules/unique",title:"Unique",description:"Check if the input value is unique in the database.",source:"@site/docs/warlock/validation/rules/unique.mdx",sourceDirName:"warlock/validation/rules",slug:"/warlock/validation/rules/unique",permalink:"/docs/warlock/validation/rules/unique",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"warlock",previous:{title:"Stringify",permalink:"/docs/warlock/validation/rules/stringify"},next:{title:"Uploadable",permalink:"/docs/warlock/validation/rules/uploadable"}},c={},o=[{value:"Example",id:"example",level:2},{value:"Unique Rule with <code>except</code> Condition",id:"unique-rule-with-except-condition",level:2},{value:"Except current user",id:"except-current-user",level:2},{value:"Perform a custom query",id:"perform-a-custom-query",level:2},{value:"Array values",id:"array-values",level:2}];function u(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.RP)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"unique",children:"Unique"}),"\n",(0,t.jsx)(r.p,{children:"Check if the input value is unique in the database."}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"This rule is a database dependent rule. It requires a database connection to run against the input value."}),"\n"]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:["The validation rule ",(0,t.jsx)(r.strong,{children:"requires a value"})," to run against the input value."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"For the time being, this rule does not support custom string rule, so the rule class must be called directly."}),"\n",(0,t.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:'title="src/app/users/controllers/create-account.ts"',children:'// ...\r\nimport { UniqueRule } from "@warlock.js/core";\r\nimport { User } from "../models/user";\r\n\r\ncreateAccount.validation = {\r\n  rules: {\r\n    email: ["required", "email", new UniqueRule(User, "email").insensitive()],\r\n  },\r\n};\n'})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"insensitive"})," method is used to make the value case insensitive."]}),"\n",(0,t.jsxs)(r.p,{children:["If the second argument is not passed, then it will be matched against the ",(0,t.jsx)(r.code,{children:"id"})," field."]}),"\n",(0,t.jsx)(r.p,{children:"You may also pass the collection name instead of the model class:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:'title="src/app/users/controllers/create-account.ts"',children:'// ...\r\nimport { UniqueRule } from "@warlock.js/core";\r\n\r\ncreateAccount.validation = {\r\n  rules: {\r\n    email: [\r\n      "required",\r\n      "email",\r\n      new UniqueRule("users", "email").insensitive(),\r\n    ],\r\n  },\r\n};\n'})}),"\n",(0,t.jsxs)(r.h2,{id:"unique-rule-with-except-condition",children:["Unique Rule with ",(0,t.jsx)(r.code,{children:"except"})," Condition"]}),"\n",(0,t.jsxs)(r.p,{children:["Ensure that a given value unique in a collection, while also allowing the exclusion of documents where a specific field does not match a specified value. This is achieved using the ",(0,t.jsx)(r.code,{children:"except"})," method, which skips documents where the specified field equals the provided value."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:'title="src/app/users/controllers/create-account.ts"',children:'// ...\r\nimport { UniqueRule } from "@warlock.js/core";\r\n\r\ncreateAccount.validation = {\r\n  rules: {\r\n    email: [\r\n      "required",\r\n      "email",\r\n      new UniqueRule("users", "email").insensitive().except("isActive", false),\r\n    ],\r\n  },\r\n};\n'})}),"\n",(0,t.jsx)(r.h2,{id:"except-current-user",children:"Except current user"}),"\n",(0,t.jsxs)(r.p,{children:["You may also validate the input to match a unique value, except the current user's value, in this case use ",(0,t.jsx)(r.code,{children:"exceptCurrentUser"})," method:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:'title="src/app/users/controllers/update-profile.ts"',children:'// ...\r\nimport { UniqueRule } from "@warlock.js/core";\r\n\r\nupdateProfile.validation = {\r\n  rules: {\r\n    email: [\r\n      "required",\r\n      "email",\r\n      new UniqueRule("users", "email").insensitive().exceptCurrentUser(),\r\n    ],\r\n  },\r\n};\n'})}),"\n",(0,t.jsx)(r.p,{children:"This one is useful when you want to update the user's email, and you want to make sure that the email is unique, except the current user's email."}),"\n",(0,t.jsx)(r.h2,{id:"perform-a-custom-query",children:"Perform a custom query"}),"\n",(0,t.jsxs)(r.p,{children:["You may also perform a custom query to validate the input value using ",(0,t.jsx)(r.code,{children:"query"})," method:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",metastring:'title="src/app/users/controllers/create-account.ts"',children:'// ...\r\nimport { UniqueRule } from "@warlock.js/core";\r\n\r\ncreateAccount.validation = {\r\n  rules: {\r\n    email: [\r\n      "required",\r\n      "email",\r\n      new UniqueRule("users", "email")\r\n        .insensitive()\r\n        .query((query) => query.where("isActive", true)),\r\n    ],\r\n  },\r\n};\n'})}),"\n",(0,t.jsx)(r.h2,{id:"array-values",children:"Array values"}),"\n",(0,t.jsxs)(r.p,{children:["If the input's value is an array, it will be checked against the database using the ",(0,t.jsx)(r.code,{children:"whereIn"})," method:"]})]})}function d(e={}){const{wrapper:r}={...(0,i.RP)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},5680:(e,r,n)=>{n.d(r,{RP:()=>o});var t=n(6540);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=t.createContext({}),o=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=o(n),h=i,m=p["".concat(c,".").concat(h)]||p[h]||u[h]||s;return n?t.createElement(m,a(a({ref:r},d),{},{components:n})):t.createElement(m,a({ref:r},d))}));d.displayName="MDXCreateElement"}}]);