"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9426],{147:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>g,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=o(4848),t=o(8453);const i={sidebar_position:2},s="Logging Configurations",l={id:"warlock/logger/configurations",title:"Logging Configurations",description:"To set logging configurations, modify src/config/log.ts file.",source:"@site/docs/warlock/logger/configurations.mdx",sourceDirName:"warlock/logger",slug:"/warlock/logger/configurations",permalink:"/docs/warlock/logger/configurations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"warlock",previous:{title:"Introduction",permalink:"/docs/warlock/logger/introduction"},next:{title:"Utils",permalink:"/docs/category/utils"}},g={},c=[{value:"Enable logging",id:"enable-logging",level:2},{value:"Environment channels",id:"environment-channels",level:2}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"logging-configurations",children:"Logging Configurations"}),"\n",(0,r.jsxs)(e.p,{children:["To set logging configurations, modify ",(0,r.jsx)(e.code,{children:"src/config/log.ts"})," file."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",metastring:'title="src/config/log.ts"',children:'import { ConsoleLog } from "@mongez/logger";\r\nimport { LogConfigurations } from "@warlock.js/core";\r\n\r\nconst consoleLog = new ConsoleLog();\r\n\r\nconst logConfigurations: LogConfigurations = {\r\n  enabled: true,\r\n  channels: [consoleLog],\r\n};\r\n\r\nexport default logConfigurations;\n'})}),"\n",(0,r.jsx)(e.p,{children:"This will enable the console logger, and set it as the default logger."}),"\n",(0,r.jsxs)(e.p,{children:["You can add more channels to the ",(0,r.jsx)(e.code,{children:"channels"})," array from ",(0,r.jsx)(e.a,{href:"https://github.com/hassanzohdy/logger",children:"Mongez Logger"})," based on your needs."]}),"\n",(0,r.jsx)(e.h2,{id:"enable-logging",children:"Enable logging"}),"\n",(0,r.jsxs)(e.p,{children:["By default logging is enabled in the application, you can control this behavior by setting the ",(0,r.jsx)(e.code,{children:"enabled"})," property in the logger configurations."]}),"\n",(0,r.jsx)(e.h2,{id:"environment-channels",children:"Environment channels"}),"\n",(0,r.jsx)(e.p,{children:"If we want to set different channels for different environments, then add the environment property in our exported object."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",metastring:'title="src/config/log.ts"',children:'import { FileLog, ConsoleLog } from "@mongez/logger";\r\nimport { LogConfigurations } from "@warlock.js/core";\r\n\r\nconst consoleLog = new ConsoleLog();\r\nconst fileLog = new FileLog();\r\n\r\nconst logConfigurations: LogConfigurations = {\r\n  enabled: true,\r\n  channels: [consoleLog],\r\n  production: {\r\n    channels: [\r\n      fileLog,\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nexport default logConfigurations;\n'})}),"\n",(0,r.jsx)(e.p,{children:"In this case, the console logger will be used in all environments except the production environment, where the file logger will be used instead for production only."})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>s,x:()=>l});var r=o(6540);const t={},i=r.createContext(t);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);