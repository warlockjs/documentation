"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8010],{8973:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=t(4848),a=t(8453);const r={sidebar_position:11},o="Model Aggregate",l={id:"cascade/aggregate/model-aggregate",title:"Model Aggregate",description:"Combine Models with Aggregate Class.",source:"@site/docs/cascade/aggregate/model-aggregate.mdx",sourceDirName:"cascade/aggregate",slug:"/cascade/aggregate/model-aggregate",permalink:"/docs/cascade/aggregate/model-aggregate",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"mongodb",previous:{title:"Data Update",permalink:"/docs/cascade/aggregate/update"},next:{title:"Events",permalink:"/docs/category/events"}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Model Aggregate Class",id:"model-aggregate-class",level:2},{value:"Example of usage",id:"example-of-usage",level:2},{value:"Return first model",id:"return-first-model",level:2},{value:"Pagination",id:"pagination",level:2},{value:"Chunk",id:"chunk",level:2}];function i(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"model-aggregate",children:"Model Aggregate"}),"\n",(0,n.jsx)(s.p,{children:"Combine Models with Aggregate Class."}),"\n",(0,n.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(s.p,{children:["We previously saw how ",(0,n.jsx)(s.code,{children:"Aggregate"})," class work, also we had a pretty good look at the ",(0,n.jsx)(s.code,{children:"Model"})," class as well, now let's see how we can combine them together."]}),"\n",(0,n.jsx)(s.h2,{id:"model-aggregate-class",children:"Model Aggregate Class"}),"\n",(0,n.jsxs)(s.p,{children:["Each model by default has an ",(0,n.jsx)(s.code,{children:"aggregate"})," method which returns an instance of ",(0,n.jsx)(s.code,{children:"ModelAggregate"})," class, this class extends the ",(0,n.jsx)(s.code,{children:"Aggregate"})," class and adds some useful methods to to, also it manipulates it to match the model nature and behavior."]}),"\n",(0,n.jsx)(s.h2,{id:"example-of-usage",children:"Example of usage"}),"\n",(0,n.jsxs)(s.p,{children:["Let's say we have a ",(0,n.jsx)(s.code,{children:"User"})," model, and we want to get the average age of all users."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="src/models/user.ts"',children:'import { Model } from "@warlock.js/cascade";\r\n\r\nexport class User extends Model {\r\n  /**\r\n   * {@inheritDoc}\r\n   */\r\n  public static collection = "users";\r\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Now let's use the ",(0,n.jsx)(s.code,{children:"aggregate"})," method to get the average age of all users."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="src/index.ts"',children:'import { User } from "./models/user";\r\n\r\nconst users = await User.aggregate().where("age", ">", 18).get();\r\n\r\nconsole.log(users);\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Unlike the base ",(0,n.jsx)(s.code,{children:"Aggregate"})," class, the ",(0,n.jsx)(s.code,{children:"ModelAggregate"}),"'s ",(0,n.jsx)(s.code,{children:"get"})," method returns an array of models instead of plain objects, so we can use the model methods on the returned documents."]}),"\n",(0,n.jsxs)(s.p,{children:["If yoy want to override the returned model, pass the first argument with a callback to the ",(0,n.jsx)(s.code,{children:"get"})," method."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'const users = await User.aggregate()\r\n  .where("age", ">", 18)\r\n  .get((user) => {\r\n    return {\r\n      ...user,\r\n      fullName: `${user.firstName} ${user.lastName}`,\r\n    };\r\n  });\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This would return an array of objects with the ",(0,n.jsx)(s.code,{children:"fullName"})," property, but not an instance of ",(0,n.jsx)(s.code,{children:"User"})," model."]}),"\n",(0,n.jsx)(s.h2,{id:"return-first-model",children:"Return first model"}),"\n",(0,n.jsxs)(s.p,{children:["To return the first model, we can use the ",(0,n.jsx)(s.code,{children:"first"})," method."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'const user = await User.aggregate().where("age", ">", 18).first();\n'})}),"\n",(0,n.jsx)(s.h2,{id:"pagination",children:"Pagination"}),"\n",(0,n.jsxs)(s.p,{children:["Pagination works exactly like normal ",(0,n.jsx)(s.code,{children:"Aggregate.paginate"})," method but the returned documents are instances of the model."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'const { documents: users, paginationInfo } = await User.aggregate()\r\n  .where("age", ">", 18)\r\n  .paginate(1, 10);\n'})}),"\n",(0,n.jsx)(s.h2,{id:"chunk",children:"Chunk"}),"\n",(0,n.jsxs)(s.p,{children:["Chunk method is also available, it works exactly like the ",(0,n.jsx)(s.code,{children:"Aggregate.chunk"})," method but the returned documents are instances of the model."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'await User.aggregate().where("age", ">", 18).chunk(10, (users) => {\r\n  console.log(users);\r\n});\n'})})]})}function g(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>l});var n=t(6540);const a={},r=n.createContext(a);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);