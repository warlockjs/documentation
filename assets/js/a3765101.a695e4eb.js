"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[7583],{7736:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=t(4848),c=t(5680);const a={sidebar_position:4},r="Connecting To Database",s={id:"cascade/getting-started/connecting-to-database",title:"Connecting To Database",description:"Connecting to a database is easy. You can use the connectToDatabase method to connect to a database. The connect method accepts a single argument, which is the name of the database you want to connect to.",source:"@site/docs/cascade/getting-started/connecting-to-database.mdx",sourceDirName:"cascade/getting-started",slug:"/cascade/getting-started/connecting-to-database",permalink:"/docs/cascade/getting-started/connecting-to-database",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mongodb",previous:{title:"Installation",permalink:"/docs/cascade/getting-started/installation"},next:{title:"Queries",permalink:"/docs/category/queries"}},i={},d=[{value:"Building Url Connection",id:"building-url-connection",level:2},{value:"Using Connection Url",id:"using-connection-url",level:2},{value:"Singleton Connection",id:"singleton-connection",level:2},{value:"Creating more than one connection",id:"creating-more-than-one-connection",level:2},{value:"Once connected",id:"once-connected",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.RP)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"connecting-to-database",children:"Connecting To Database"}),"\n",(0,o.jsxs)(n.p,{children:["Connecting to a database is easy. You can use the ",(0,o.jsx)(n.code,{children:"connectToDatabase"})," method to connect to a database. The ",(0,o.jsx)(n.code,{children:"connect"})," method accepts a single argument, which is the name of the database you want to connect to."]}),"\n",(0,o.jsx)(n.h2,{id:"building-url-connection",children:"Building Url Connection"}),"\n",(0,o.jsxs)(n.p,{children:["If you want to make it simple, you can easily pass the database connection url segments, which contains: ",(0,o.jsx)(n.code,{children:"host"}),", ",(0,o.jsx)(n.code,{children:"port"}),", ",(0,o.jsx)(n.code,{children:"username"}),", ",(0,o.jsx)(n.code,{children:"password"}),", and ",(0,o.jsx)(n.code,{children:"dbAuth"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { connectToDatabase } from "@warlock.js/cascade";\r\n\r\nconnectToDatabase({\r\n  host: "localhost",\r\n  port: 27017,\r\n  database: "my-database",\r\n  username: "my-username",\r\n  password: "my-password",\r\n  dbAuth: "admin",\r\n});\n'})}),"\n",(0,o.jsxs)(n.p,{children:["These are the minimum configurations needed to connect to MongoDB server, but you can pass more options to the ",(0,o.jsx)(n.code,{children:"connectToDatabase"})," function that receives the same options as the ",(0,o.jsx)(n.code,{children:"MongoClient"})," instance."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"{10,11}",children:'import { connectToDatabase } from "@warlock.js/cascade";\r\n\r\nconnectToDatabase({\r\n  host: "localhost",\r\n  port: 27017,\r\n  database: "my-database",\r\n  username: "my-username",\r\n  password: "my-password",\r\n  dbAuth: "admin",\r\n  retryWrites: true,\r\n  replicaSet: "rs0",\r\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"using-connection-url",children:"Using Connection Url"}),"\n",(0,o.jsxs)(n.p,{children:["Alternatively, you can pass the connection url directly to the ",(0,o.jsx)(n.code,{children:"connectToDatabase"})," function."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { connectToDatabase } from "@warlock.js/cascade";\r\n\r\nconnectToDatabase({\r\n  url: "mongodb://localhost:27017/my-database",\r\n  database: "my-database",\r\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"singleton-connection",children:"Singleton Connection"}),"\n",(0,o.jsxs)(n.p,{children:["Using ",(0,o.jsx)(n.code,{children:"connectToDatabase"})," will ensure that connection is established only once ",(0,o.jsx)(n.code,{children:"Singleton Pattern"}),", and will ignore any other calls to the ",(0,o.jsx)(n.code,{children:"connectToDatabase"})," function."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you want to use multiple database, you don't need to create multiple connections, you can use the ",(0,o.jsx)(n.code,{children:"useDatabase"})," method to switch between databases."]})}),"\n",(0,o.jsx)(n.h2,{id:"creating-more-than-one-connection",children:"Creating more than one connection"}),"\n",(0,o.jsxs)(n.p,{children:["In some situations, you might need to create multiple connections per project, in that sense you can manually create a new ",(0,o.jsx)(n.code,{children:"Connection"})," instance."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { Connection } from "@warlock.js/cascade";\r\n\r\nconst connection = new Connection();\r\n\r\nconnection.connect({\r\n  // same configurations as the connectToDatabase function\r\n});\n'})}),"\n",(0,o.jsx)(n.h2,{id:"once-connected",children:"Once connected"}),"\n",(0,o.jsxs)(n.p,{children:["Sometimes you want to execute a code when the connection is established, you can use the ",(0,o.jsx)(n.code,{children:"onceConnected"})," method to execute a callback when the connection is established."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { onceConnected } from "@warlock.js/cascade";\r\n\r\nonceConnected(() => {\r\n  // do something\r\n});\n'})}),"\n",(0,o.jsx)(n.p,{children:"If the connection is not established yet, the callback will be added to the queue, and will be executed once the connection is established, otherwise it will be executed immediately."})]})}function h(e={}){const{wrapper:n}={...(0,c.RP)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>d});var o=t(6540);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,c=function(e,n){if(null==e)return{};var t,o,c={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var i=o.createContext({}),d=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},h=o.forwardRef((function(e,n){var t=e.components,c=e.mdxType,a=e.originalType,i=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=c,p=u["".concat(i,".").concat(m)]||u[m]||l[m]||a;return t?o.createElement(p,r(r({ref:n},h),{},{components:t})):o.createElement(p,r({ref:n},h))}));h.displayName="MDXCreateElement"}}]);