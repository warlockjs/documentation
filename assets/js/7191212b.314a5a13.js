"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[7625],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=a.createContext({}),i=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(r),m=o,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||n;return r?a.createElement(g,l(l({ref:t},p),{},{components:r})):a.createElement(g,l({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,l[1]=s;for(var i=2;i<n;i++)l[i]=r[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5355:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>i});var a=r(7462),o=(r(7294),r(3905));const n={sidebar_position:3},l="Database Decorators",s={unversionedId:"warlock/database/decorators",id:"warlock/database/decorators",title:"Database Decorators",description:"Decorators are a way to add metadata to a class, property, or method declaration, and make the class, property, or method declaration more expressive.",source:"@site/docs/warlock/database/decorators.mdx",sourceDirName:"warlock/database",slug:"/warlock/database/decorators",permalink:"/docs/warlock/database/decorators",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"warlock",previous:{title:"Database Configurations",permalink:"/docs/warlock/database/configurations"},next:{title:"Http Requests",permalink:"/docs/category/http-requests"}},c={},i=[{value:"Sluggable",id:"sluggable",level:2},{value:"Example",id:"example",level:3}],p={toc:i},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"database-decorators"},"Database Decorators"),(0,o.kt)("p",null,"Decorators are a way to add metadata to a class, property, or method declaration, and make the class, property, or method declaration more expressive."),(0,o.kt)("h2",{id:"sluggable"},"Sluggable"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Sluggable")," decorator is used to generate a slug from a string property, it uses under the hood ",(0,o.kt)("a",{parentName:"p",href:"./../utils/sluggable"},"sluggable")," utility function."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/products/models/product.ts"',title:'"src/app/products/models/product.ts"'},'import { castModel, Casts, Model } from "@warlock.js/cascade";\nimport { Sluggable, uploadable } from "@warlock.js/core";\n\n@Sluggable("title")\nexport default class Post extends Model {\n  // ...\n\n  /**\n   * {@inheritDoc}\n   */\n  protected casts: Casts = {\n    title: "localized",\n    description: "localized",\n    shortDescription: "localized",\n    isActive: "boolean",\n  };\n}\n')),(0,o.kt)("p",null,"This will create ",(0,o.kt)("inlineCode",{parentName:"p"},"slug")," field whenever the post is saved (created or updated), the slug will be generated from the ",(0,o.kt)("inlineCode",{parentName:"p"},"title")," field."),(0,o.kt)("p",null,"You can generate the slug from another column by passing the column name to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Sluggable")," decorator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/products/models/product.ts"',title:'"src/app/products/models/product.ts"'},'import { castModel, Casts, Model } from "@warlock.js/cascade";\nimport { Sluggable, uploadable } from "@warlock.js/core";\n\n@Sluggable("name")\nexport default class Post extends Model {\n  // ...\n\n  /**\n   * {@inheritDoc}\n   */\n  protected casts: Casts = {\n    name: "localized",\n    description: "localized",\n    shortDescription: "localized",\n    isActive: "boolean",\n  };\n}\n')))}u.isMDXComponent=!0}}]);