"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[292],{3853:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=t(4848),s=t(5680);const a={sidebar_position:9},i="Fetching Documents",c={id:"cascade/aggregate/fetching",title:"Fetching Documents",description:"Fetching documents using Mongez Aggregate class.",source:"@site/docs/cascade/aggregate/fetching.mdx",sourceDirName:"cascade/aggregate",slug:"/cascade/aggregate/fetching",permalink:"/docs/cascade/aggregate/fetching",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mongodb",previous:{title:"Delete Documents",permalink:"/docs/cascade/aggregate/delete"},next:{title:"Sorting",permalink:"/docs/cascade/aggregate/sort"}},o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Using get method",id:"using-get-method",level:2},{value:"Get first document",id:"get-first-document",level:2},{value:"Get last document",id:"get-last-document",level:2},{value:"Pagination",id:"pagination",level:2},{value:"Count documents",id:"count-documents",level:2},{value:"Chunks",id:"chunks",level:2},{value:"Explain",id:"explain",level:2},{value:"Get certain field values",id:"get-certain-field-values",level:2},{value:"Get Unique/Distinct values for a field",id:"get-uniquedistinct-values-for-a-field",level:2},{value:"Get Heavy Unique/Distinct values for a field",id:"get-heavy-uniquedistinct-values-for-a-field",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"fetching-documents",children:"Fetching Documents"}),"\n",(0,r.jsx)(n.p,{children:"Fetching documents using Mongez Aggregate class."}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["As we saw, ",(0,r.jsx)(n.code,{children:"Aggregate"})," is a pipeline that hold multiple stages, we saw how to build the pipeline, now let's see how to fetch the documents."]}),"\n",(0,r.jsx)(n.h2,{id:"using-get-method",children:"Using get method"}),"\n",(0,r.jsx)(n.p,{children:"This is the most common method to fetch documents, it will return an array of documents."}),"\n",(0,r.jsx)(n.p,{children:"Let's see an example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { Aggregate } from "@warlock.js/cascade";\r\n\r\nconst users = await new Aggregate("users").where("id", ">", 1500).get();\n'})}),"\n",(0,r.jsx)(n.p,{children:"This will return list of documents for the users collection."}),"\n",(0,r.jsxs)(n.p,{children:["If we want to map the date before final return, we can pass a callback to the ",(0,r.jsx)(n.code,{children:"get"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const users = await new Aggregate("users").get((user) => {\r\n  user.age = new Date().getFullYear() - user.birthYear;\r\n  return user;\r\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"get-first-document",children:"Get first document"}),"\n",(0,r.jsxs)(n.p,{children:["To fetch only first matched document, we can use ",(0,r.jsx)(n.code,{children:"first"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const user = await new Aggregate("users").where("id", 1500).first();\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If no results found, ",(0,r.jsx)(n.code,{children:"null"})," will be returned."]}),"\n",(0,r.jsx)(n.h2,{id:"get-last-document",children:"Get last document"}),"\n",(0,r.jsx)(n.p,{children:"Return last matched document."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const user = await new Aggregate("users").where("id", 1500).last();\n'})}),"\n",(0,r.jsx)(n.h2,{id:"pagination",children:"Pagination"}),"\n",(0,r.jsxs)(n.p,{children:["Another powerful feature of ",(0,r.jsx)(n.code,{children:"Aggregate"})," is pagination, we can use ",(0,r.jsx)(n.code,{children:"paginate"})," method to paginate the results."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const results = await new Aggregate("users").paginate(1, 10);\n'})}),"\n",(0,r.jsx)(n.p,{children:"The first argument is the page number, and the second argument is the limit."}),"\n",(0,r.jsx)(n.p,{children:"The results contains an object with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export type PaginationInfo = {\r\n  /**\r\n   * Limit of the query\r\n   */\r\n  limit: number;\r\n  /**\r\n   * Results of the query\r\n   */\r\n  result: number;\r\n  /**\r\n   * Current page of the query\r\n   */\r\n  page: number;\r\n  /**\r\n   * total results of the query\r\n   */\r\n  total: number;\r\n  /**\r\n   * total pages of the query\r\n   */\r\n  pages: number;\r\n};\r\n/**\r\n * The result of the paginate query\r\n */\r\nexport type PaginationListing<T> = {\r\n  /**\r\n   * Results of the query\r\n   */\r\n  documents: T[];\r\n  /**\r\n   * The pagination results\r\n   */\r\n  paginationInfo: PaginationInfo;\r\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["So basically, it returns ",(0,r.jsx)(n.code,{children:"documents"})," and ",(0,r.jsx)(n.code,{children:"paginationInfo"})," object, the ",(0,r.jsx)(n.code,{children:"documents"})," is an array of documents, and the ",(0,r.jsx)(n.code,{children:"paginationInfo"})," contains the pagination information."]}),"\n",(0,r.jsx)(n.h2,{id:"count-documents",children:"Count documents"}),"\n",(0,r.jsxs)(n.p,{children:["To count the number of documents, we can use ",(0,r.jsx)(n.code,{children:"count"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const count = await new Aggregate("users").count();\n'})}),"\n",(0,r.jsx)(n.h2,{id:"chunks",children:"Chunks"}),"\n",(0,r.jsx)(n.p,{children:"The chunk concept is to split the documents into multiple chunks, this will reduce the loaded documents in the memory especially if we have a large number of documents."}),"\n",(0,r.jsxs)(n.p,{children:["To use chunks, we can use ",(0,r.jsx)(n.code,{children:"chunk"})," method, it receives the ",(0,r.jsx)(n.code,{children:"limit"})," of documents per chunk and a callback to handle the chunk."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'await new Aggregate("users").chunk(100, (users) => {\r\n  // handle the chunk\r\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can also receive the ",(0,r.jsx)(n.code,{children:"pagination information"})," in the second callback argument:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'await new Aggregate("users").chunk(100, (users, pagination) => {\r\n  // handle the chunk\r\n});\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["If you want to stop the chunking process, you can return ",(0,r.jsx)(n.code,{children:"false"})," from the callback."]})}),"\n",(0,r.jsx)(n.h2,{id:"explain",children:"Explain"}),"\n",(0,r.jsxs)(n.p,{children:["Sometimes we need to know how the query is executed, we can use ",(0,r.jsx)(n.code,{children:"explain"})," method to get the execution plan of the query."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const results = await new Aggregate("users").explain();\n'})}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/#return-information-on-aggregation-pipeline-operation",children:"explain"})," for more information."]}),"\n",(0,r.jsx)(n.h2,{id:"get-certain-field-values",children:"Get certain field values"}),"\n",(0,r.jsxs)(n.p,{children:["To get certain field values, we can use ",(0,r.jsx)(n.code,{children:"values"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const results = await new Aggregate("users").values("name");\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This will return all values from all documents for the ",(0,r.jsx)(n.code,{children:"name"})," field."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Please note that the ",(0,r.jsx)(n.code,{children:"values"})," method will return an array of values, not an array of documents."]})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The returned values may return duplicated values, to get unique values, use ",(0,r.jsx)(n.code,{children:"unique"})," method."]})}),"\n",(0,r.jsx)(n.h2,{id:"get-uniquedistinct-values-for-a-field",children:"Get Unique/Distinct values for a field"}),"\n",(0,r.jsxs)(n.p,{children:["To get unique values for a given field, we can use ",(0,r.jsx)(n.code,{children:"unique"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const results = await new Aggregate("users").unique("name");\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.code,{children:"distinct"})," method as an alias for ",(0,r.jsx)(n.code,{children:"unique"})," method."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"get-heavy-uniquedistinct-values-for-a-field",children:"Get Heavy Unique/Distinct values for a field"}),"\n",(0,r.jsxs)(n.p,{children:["In some scenarios, the unique values may contain ",(0,r.jsx)(n.code,{children:"null"})," value, to ensure only a ",(0,r.jsx)(n.code,{children:"non-null"})," values are returned, we can use ",(0,r.jsx)(n.code,{children:"uniqueHeavy"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const results = await new Aggregate("users").uniqueHeavy("name");\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.code,{children:"distinctHeavy"})," method as an alias for ",(0,r.jsx)(n.code,{children:"uniqueHeavy"})," method."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>l});var r=t(6540);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=r.createContext({}),l=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),h=l(t),g=s,m=h["".concat(o,".").concat(g)]||h[g]||d[g]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));u.displayName="MDXCreateElement"}}]);