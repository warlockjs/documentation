"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9832],{5992:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>r});var n=i(4848),l=i(8453);const o={sidebar_position:5},s="Getting Uploaded Files",d={id:"warlock/upload/getting-uploaded-files",title:"Getting Uploaded Files",description:"There are two ways to get the uploaded file, either using the file path directly, or using the file hash.",source:"@site/docs/warlock/upload/getting-uploaded-files.mdx",sourceDirName:"warlock/upload",slug:"/warlock/upload/getting-uploaded-files",permalink:"/docs/warlock/upload/getting-uploaded-files",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"warlock",previous:{title:"Upload Model",permalink:"/docs/warlock/upload/upload-model"},next:{title:"Compressing images",permalink:"/docs/warlock/upload/compressing-images"}},a={},r=[{value:"Getting Uploaded File using the File Path",id:"getting-uploaded-file-using-the-file-path",level:2},{value:"Example",id:"example",level:3},{value:"Images resizing",id:"images-resizing",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"getting-uploaded-files",children:"Getting Uploaded Files"}),"\n",(0,n.jsx)(t.p,{children:"There are two ways to get the uploaded file, either using the file path directly, or using the file hash."}),"\n",(0,n.jsx)(t.h2,{id:"getting-uploaded-file-using-the-file-path",children:"Getting Uploaded File using the File Path"}),"\n",(0,n.jsx)(t.p,{children:"This way is a little bit performant as it ignores the database query, and it's used to get the uploaded file using the file path directly."}),"\n",(0,n.jsxs)(t.p,{children:["To get the uploaded file using the file path, use ",(0,n.jsx)(t.code,{children:"/uploads/*"})," endpoint with ",(0,n.jsx)(t.code,{children:"GET"})," method."]}),"\n",(0,n.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'{3} title="src/app/uploads/routes.ts"',children:'import { router, getUploadedFile } from "@warlock.js/core";\r\n\r\nrouter.get("/uploads/*", getUploadedFile);\n'})}),"\n",(0,n.jsx)(t.h2,{id:"images-resizing",children:"Images resizing"}),"\n",(0,n.jsxs)(t.p,{children:["Any image url that is being served by ",(0,n.jsx)(t.code,{children:"getUploadedFile"})," endpoint can be resized for ",(0,n.jsx)(t.code,{children:"width"})," and ",(0,n.jsx)(t.code,{children:"height"})," by adding ",(0,n.jsx)(t.code,{children:"w"})," and ",(0,n.jsx)(t.code,{children:"h"})," respectively to query parameters."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"https://example.com/uploads/images/image.jpg?w=200&h=200\n"})}),"\n",(0,n.jsxs)(t.p,{children:["We can send either ",(0,n.jsx)(t.code,{children:"w"})," or ",(0,n.jsx)(t.code,{children:"h"})," or both, if we send only one of them, the other will be calculated automatically."]})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>d});var n=i(6540);const l={},o=n.createContext(l);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);