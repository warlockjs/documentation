"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[6829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,h=m["".concat(i,".").concat(u)]||m[u]||p[u]||o;return n?a.createElement(h,s(s({ref:t},d),{},{components:n})):a.createElement(h,s({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[m]="string"==typeof e?e:r,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},217:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},s="Create New Document",c={unversionedId:"cascade/models/create-document",id:"cascade/models/create-document",title:"Create New Document",description:"In the previous section, we've seen how to create a document by creating a new instance of the model then calling the save method, this is a way, let's recap it quickly.",source:"@site/docs/cascade/models/create-document.mdx",sourceDirName:"cascade/models",slug:"/cascade/models/create-document",permalink:"/docs/cascade/models/create-document",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mongodb",previous:{title:"Philosophy",permalink:"/docs/cascade/models/introduction"},next:{title:"Casting Data",permalink:"/docs/cascade/models/casting-data"}},i={},l=[{value:"Creating a model",id:"creating-a-model",level:2},{value:"Creating a model instance",id:"creating-a-model-instance",level:2},{value:"Saving a model instance",id:"saving-a-model-instance",level:2},{value:"Using the <code>create</code> method",id:"using-the-create-method",level:2}],d={toc:l},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-new-document"},"Create New Document"),(0,r.kt)("p",null,"In the previous section, we've seen how to create a document by creating a new instance of the model then calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"save")," method, this is a way, let's recap it quickly."),(0,r.kt)("h2",{id:"creating-a-model"},"Creating a model"),(0,r.kt)("p",null,"To create a model, you need to extend the ",(0,r.kt)("inlineCode",{parentName:"p"},"Model")," class and define the ",(0,r.kt)("inlineCode",{parentName:"p"},"collection")," property."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/models/user.ts"',title:'"src/models/user.ts"'},'import { Model } from "@warlock.js/cascade";\n\nexport class User extends Model {\n    /**\n    * The collection name\n    */\n    public static collection = "users";\n}\n')),(0,r.kt)("h2",{id:"creating-a-model-instance"},"Creating a model instance"),(0,r.kt)("p",null,"When creating a new model instance, you optionally pass an object of the data that will be saved (",(0,r.kt)("strong",{parentName:"p"},"created"),")."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app.ts"',title:'"src/app.ts"'},'import { User } from "./models/user";\n\nconst user = new User({\n    name: "Hasan Zohdy",\n    email: "hassanzohdy@gmail.com",\n    isActive: true,\n});\n')),(0,r.kt)("p",null,"This only creates an instance of the model, but the data is not saved yet, now let's see how to save the data."),(0,r.kt)("h2",{id:"saving-a-model-instance"},"Saving a model instance"),(0,r.kt)("p",null,"To save a model instance, you need to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"save")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app.ts"',title:'"src/app.ts"'},'import { User } from "./models/user";\n\nasync function main() {\n    const user = new User({\n        name: "Hasan Zohdy",\n        email: "hassanzohdy@gmail.com",\n        isActive: true,\n    });\n\n    await user.save();\n\n    console.log(user.data); // outputs all data\n}\n')),(0,r.kt)("h2",{id:"using-the-create-method"},"Using the ",(0,r.kt)("inlineCode",{parentName:"h2"},"create")," method"),(0,r.kt)("p",null,"A more preferred way to create a new model instance and save it is to use the static ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app.ts"',title:'"src/app.ts"'},'import { User } from "./models/user";\n\nasync function main() {\n    const user = await User.create({\n        name: "Hasan Zohdy",\n        email: "hassanzohdy@gmail.com",\n        isActive: true,\n    });\n\n    console.log(user.data); // outputs all data\n}\n')),(0,r.kt)("p",null,"This is more easier and cleaner, and it's the ",(0,r.kt)("strong",{parentName:"p"},"recommended way")," to create a new model instance and save it."))}p.isMDXComponent=!0}}]);