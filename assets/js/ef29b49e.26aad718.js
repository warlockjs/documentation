"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[9434],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>v});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,v=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(v,i(i({ref:t},c),{},{components:r})):n.createElement(v,i({ref:t},c))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8785:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},i="Introduction",l={unversionedId:"warlock/validation/introduction",id:"warlock/validation/introduction",title:"Introduction",description:"Validation is a common task in web applications, it's used to validate the user input, and make sure it's valid before processing it.",source:"@site/docs/warlock/validation/introduction.mdx",sourceDirName:"warlock/validation",slug:"/warlock/validation/introduction",permalink:"/mongez/docs/warlock/validation/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"warlock",previous:{title:"Validation",permalink:"/mongez/docs/category/validation"},next:{title:"Validation Configurations",permalink:"/mongez/docs/warlock/validation/configurations"}},s={},u=[{value:"How it works",id:"how-it-works",level:2},{value:"Validation Rules",id:"validation-rules",level:2},{value:"Custom Validator",id:"custom-validator",level:2},{value:"Example",id:"example",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Validation is a common task in web applications, it's used to validate the user input, and make sure it's valid before processing it."),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,"There are two ways of validating a request, either by using ",(0,a.kt)("a",{parentName:"p",href:"#validation-rules"},"Validation Rules")," or by using ",(0,a.kt)("a",{parentName:"p",href:"#custom-validator"},"Custom Validator"),"."),(0,a.kt)("p",null,"Each request handler can add it's validation criteria by extending the function with a static property called ",(0,a.kt)("inlineCode",{parentName:"p"},"validation"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"validation")," object has two keys:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rules"),": An object that contains the validation rules, which acts exactly like a ",(0,a.kt)("a",{parentName:"li",href:"./validation-rules"},"validation rules"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"validate"),": A function that accepts the request and response objects, which acts exactly like a ",(0,a.kt)("a",{parentName:"li",href:"./../http/middleware"},"middleware"),".")),(0,a.kt)("h2",{id:"validation-rules"},"Validation Rules"),(0,a.kt)("p",null,"Validation rules are rules that are used to validate the request input, it's used to validate the request body, query, and params."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"./validation-rules"},"Read more about validation rules")),(0,a.kt)("h2",{id:"custom-validator"},"Custom Validator"),(0,a.kt)("p",null,"Consider a custom validator as the final middleware interceptor before processing the request, it's used to validate the request after the validation rules."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"./custom-validator"},"Read more about custom validator")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"Let's consider using the login request as an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/users/routes.ts"',title:'"src/app/users/routes.ts"'},'import { router } from "@mongez/warlock";\nimport { login } from "./controllers/auth/login";\n\nrouter.post("/login", login);\n')),(0,a.kt)("p",null,"Now let's head to ",(0,a.kt)("inlineCode",{parentName:"p"},"src/app/users/controllers/auth/login.ts")," and see what's inside:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/users/controllers/auth/login.ts"',title:'"src/app/users/controllers/auth/login.ts"'},'import { Request, Response } from "@mongez/warlock";\nimport { User } from "app/users/models/user";\n\nexport default async function login(request: Request, response: Response) {\n  // do logic here\n}\n\nlogin.validation = {\n  rules: {\n    email: ["required", "email"],\n    password: ["required", "string"],\n  },\n  validate: async (request: Request, response: Response) => {\n    // custom validation here\n    const user = await User.attempt(request.only(["email", "password"]));\n\n    if (!user) {\n      return response.unauthorized();\n    }\n\n    // inject the user object to the request object\n    // Make sure to not return a value, otherwise the request will be terminated\n    request.user = user;\n  },\n};\n')))}p.isMDXComponent=!0}}]);