"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4396],{8200:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var n=s(4848),o=s(8453);const r={sidebar_position:4},c="Casting Custom Fields",a={id:"cascade/models/casting-custom-fields",title:"Casting Custom Fields",description:"Casting custom fields are another common use case for custom fields. For example, we need to generate a slug field from the title field. We can use the cast method to cast the title field to a slug field, because we don't need to add slug field when creating a new post from outside the model.",source:"@site/docs/cascade/models/casting-custom-fields.mdx",sourceDirName:"cascade/models",slug:"/cascade/models/casting-custom-fields",permalink:"/docs/cascade/models/casting-custom-fields",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mongodb",previous:{title:"Casting Data",permalink:"/docs/cascade/models/casting-data"},next:{title:"Default values",permalink:"/docs/cascade/models/default-values"}},i={},l=[];function d(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"casting-custom-fields",children:"Casting Custom Fields"}),"\n",(0,n.jsxs)(t.p,{children:["Casting custom fields are another common use case for custom fields. For example, we need to generate a ",(0,n.jsx)(t.code,{children:"slug"})," field from the ",(0,n.jsx)(t.code,{children:"title"})," field. We can use the ",(0,n.jsx)(t.code,{children:"cast"})," method to cast the ",(0,n.jsx)(t.code,{children:"title"})," field to a ",(0,n.jsx)(t.code,{children:"slug"})," field, because we don't need to add slug field when creating a new post from outside the model."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="src/models/post.ts"',children:'import { Model, Casts } from "@warlock.js/cascade";\r\nimport { sluggable } from "./../utils/casts/sluggable";\r\n\r\nexport class Post extends Model {\r\n  /**\r\n   * Collection name\r\n   */\r\n  public static collection = "posts";\r\n\r\n  /**\r\n   * {@inheritDoc}\r\n   */\r\n  protected casts: Casts = {\r\n    title: "string",\r\n    content: "string",    \r\n  };\r\n\r\n  /**\r\n   * {@inheritDoc}\r\n   */\r\n   protected customCasts: CustomCasts = {\r\n    slug: sluggable("title"),\r\n  };\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"sluggable"})," cast is a custom cast that we created to generate a slug from the title. We can use it as follows:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:'title="src/utils/casts/sluggable.ts"',children:'import { Model } from "@warlock.js/cascade";\r\nimport slug from "@mongez/slug";\r\n\r\n/**\r\n * Used for model castings\r\n */\r\nexport function sluggable(field: string) {\r\n  return (model: Model) => {\r\n    let value = model.get(field);\r\n\r\n    if (!value) return "";\r\n\r\n    return slug(String(value));\r\n  };\r\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Unlike ",(0,n.jsx)(t.code,{children:"casts"}),", ",(0,n.jsx)(t.code,{children:"customCasts"})," receives directly the model instance in the first argument this is we don't need to pass the field name to the cast function."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(6540);const o={},r=n.createContext(o);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);