"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[8438],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:6},o="Redis Cache Driver",l={unversionedId:"warlock/cache/redis",id:"warlock/cache/redis",title:"Redis Cache Driver",description:"Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker.",source:"@site/docs/warlock/cache/redis.mdx",sourceDirName:"warlock/cache",slug:"/warlock/cache/redis",permalink:"/documentation/docs/warlock/cache/redis",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"warlock",previous:{title:"Base Cache Driver",permalink:"/documentation/docs/warlock/cache/base-cache-driver"},next:{title:"Memory Cache Driver",permalink:"/documentation/docs/warlock/cache/memory"}},s={},c=[{value:"Setup",id:"setup",level:2},{value:"Configurations",id:"configurations",level:2},{value:"Options",id:"options",level:2},{value:"Accessing the Redis Client",id:"accessing-the-redis-client",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"redis-cache-driver"},"Redis Cache Driver"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://redis.io/"},"Redis")," is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker."),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"By default ",(0,a.kt)("inlineCode",{parentName:"p"},"Redis")," is shipped with ",(0,a.kt)("inlineCode",{parentName:"p"},"Warlock")," so you don't need to install any dependencies."),(0,a.kt)("h2",{id:"configurations"},"Configurations"),(0,a.kt)("p",null,"Go to the ",(0,a.kt)("a",{parentName:"p",href:"./configurations"},"Cache Configurations")," file, and add the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/cache.ts"',title:'"src/config/cache.ts"'},'import { env } from "@mongez/dotenv";\nimport { CacheConfigurations, RedisCacheDriver } from "@mongez/warlock";\n\nconst cacheConfigurations: CacheConfigurations = {\n  drivers: {\n    redis: RedisCacheDriver,\n  },\n  default: env("CACHE_DRIVER", "redis"),\n  options: {\n    redis: {\n      host: env("REDIS_HOST"),\n      port: env("REDIS_PORT"),\n      username: env("REDIS_USERNAME"),\n      password: env("REDIS_PASSWORD"),\n    },\n  },\n};\n\nexport default cacheConfigurations;\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Make sure Redis is installed on your local machine and on the server otherwise it will throw an error.")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"host"),": Redis host, the default value is ",(0,a.kt)("inlineCode",{parentName:"li"},"localhost"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"port"),": Redis port, the default value is ",(0,a.kt)("inlineCode",{parentName:"li"},"6379"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"url"),": If you're using a remote Redis server, you can pass the URL directly, this will override the ",(0,a.kt)("inlineCode",{parentName:"li"},"host")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"port")," options."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"username"),": Redis username, the default value is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"password"),": Redis password, the default value is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"globalPrefix"),": A prefix that will be added to all keys. This is useful when you want to use the same cache driver for multiple applications, it could be a ",(0,a.kt)("inlineCode",{parentName:"li"},"string")," or a callback that returns a ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),", if not provided then there will no be prefix for the keys."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"clientOptions"),": Any additional options that will be passed to the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/redis/node-redis/blob/a8b81bdd01329252466eb1dd608b2a92b960c3ae/docs/client-configuration.md"},"Redis Configurations"),".")),(0,a.kt)("h2",{id:"accessing-the-redis-client"},"Accessing the Redis Client"),(0,a.kt)("p",null,"To access the Redis client, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"client")," property on the cache manager or the cache driver."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { cache } from "@mongez/warlock";\n\n// assuming the default driver is redis\nconst redisClient = cache.client;\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Please note that the Redis Cache Drier implements all methods in ",(0,a.kt)("a",{parentName:"p",href:"./cache-driver-interface"},"Cache Driver Interface")," so you can use it directly as a cache driver.")))}u.isMDXComponent=!0}}]);