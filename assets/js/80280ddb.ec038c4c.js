"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[7439],{7337:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=t(4848),i=t(5680);const o={sidebar_position:12},c="Master Mind",a={id:"cascade/advanced/master-mind",title:"Master Mind",description:"Introduction",source:"@site/docs/cascade/advanced/master-mind.mdx",sourceDirName:"cascade/advanced",slug:"/cascade/advanced/master-mind",permalink:"/docs/cascade/advanced/master-mind",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"mongodb",previous:{title:"Auto Increment",permalink:"/docs/cascade/advanced/auto-increment"},next:{title:"TODO",permalink:"/docs/cascade/advanced/todo"}},s={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Master Mind Collection",id:"master-mind-collection",level:2},{value:"Get last id",id:"get-last-id",level:2},{value:"Generate next id",id:"generate-next-id",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"master-mind",children:"Master Mind"}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"MasterMind"})," is helper class that is fully dedicated to manage the model ",(0,r.jsx)(n.code,{children:"id"})," field, it is used internally by the model class to keep tracking of generated ids and gets the proper next id."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["For SQL People, consider it more likely the ",(0,r.jsx)(n.code,{children:"INFORMATION_SCHEMA"})," table."]})}),"\n",(0,r.jsx)(n.h2,{id:"master-mind-collection",children:"Master Mind Collection"}),"\n",(0,r.jsxs)(n.p,{children:["Any model that is being saved, the model's collection name and the last saved id are stored in ",(0,r.jsx)(n.code,{children:"MasterMind"})," collection, the purpose of this collection is to keep tracking of the last saved id for each collection"]}),"\n",(0,r.jsx)(n.h2,{id:"get-last-id",children:"Get last id"}),"\n",(0,r.jsx)(n.p,{children:"If you want to get the last id of any collection, consider the following snippet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"src/app.ts",children:'import { masterMind } from "@warlock.js/cascade";\r\n\r\nasync function main() {\r\n  const lastId = await masterMind.getLastId("categories");\r\n\r\n  console.log(lastId); // 512344\r\n}\r\n\r\nmain();\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["We imported ",(0,r.jsx)(n.code,{children:"masterMind"})," as an object, if you want to create a new instance of it, you may import ",(0,r.jsx)(n.code,{children:"MasterMind"})," class instead."]})}),"\n",(0,r.jsx)(n.h2,{id:"generate-next-id",children:"Generate next id"}),"\n",(0,r.jsx)(n.p,{children:"To generate the next id of any collection, consider the following snippet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"src/app.ts",children:'import { masterMind } from "@warlock.js/cascade";\r\n\r\nasync function main() {\r\n  const initialId = 1;\r\n  const incrementBy = 1;\r\n  const nextId = await masterMind.getNextId(\r\n    "categories",\r\n    initialId,\r\n    incrementBy\r\n  );\r\n\r\n  console.log(nextId); // 1\r\n\r\n  const nextId2 = await masterMind.getNextId(\r\n    "categories",\r\n    initialId,\r\n    incrementBy\r\n  );\r\n\r\n  console.log(nextId); // 2\r\n}\r\n\r\nmain();\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"getNextId"})," method accepts three arguments:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"collectionName"}),": The collection name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"initialId"}),": The initial id value, it will be used if the collection name does not exist in the ",(0,r.jsx)(n.code,{children:"MasterMind"})," collection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"incrementBy"}),": The increment value, it will be used if the collection name does not exist in the ",(0,r.jsx)(n.code,{children:"MasterMind"})," collection"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>d});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),p=d(t),h=i,u=p["".concat(s,".").concat(h)]||p[h]||l[h]||o;return t?r.createElement(u,c(c({ref:n},m),{},{components:t})):r.createElement(u,c({ref:n},m))}));m.displayName="MDXCreateElement"}}]);