"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[2656],{541:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var r=t(4848),s=t(5680);const c={sidebar_position:3},a="Saving Documents",i={id:"cascade/queries/saving-documents",title:"Saving Documents",description:"When saying saving, it means creating, updating or replacing documents, let's see how to do that.",source:"@site/docs/cascade/queries/saving-documents.mdx",sourceDirName:"cascade/queries",slug:"/cascade/queries/saving-documents",permalink:"/docs/cascade/queries/saving-documents",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"mongodb",previous:{title:"Listing Documents",permalink:"/docs/cascade/queries/listing-documents"},next:{title:"Deleting Documents",permalink:"/docs/cascade/queries/deleting-documents"}},o={},d=[{value:"Create new document",id:"create-new-document",level:2},{value:"Create multiple documents",id:"create-multiple-documents",level:2},{value:"Update document",id:"update-document",level:2},{value:"Update multiple documents",id:"update-multiple-documents",level:2},{value:"Replace document",id:"replace-document",level:2},{value:"Upsert document",id:"upsert-document",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"saving-documents",children:"Saving Documents"}),"\n",(0,r.jsxs)(n.p,{children:["When saying ",(0,r.jsx)(n.code,{children:"saving"}),", it means ",(0,r.jsx)(n.code,{children:"creating"}),", ",(0,r.jsx)(n.code,{children:"updating"})," or ",(0,r.jsx)(n.code,{children:"replacing"})," documents, let's see how to do that."]}),"\n",(0,r.jsx)(n.h2,{id:"create-new-document",children:"Create new document"}),"\n",(0,r.jsxs)(n.p,{children:["To create a new document, use the ",(0,r.jsx)(n.code,{children:"create"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/app.ts"',children:'import { query } from "@warlock.js/cascade";\r\n\r\nconst user = await query.create("users", {\r\n  name: "John Doe",\r\n  isActive: true,\r\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This will create a new document in the ",(0,r.jsx)(n.code,{children:"users"})," collection, and return the created document."]}),"\n",(0,r.jsx)(n.h2,{id:"create-multiple-documents",children:"Create multiple documents"}),"\n",(0,r.jsxs)(n.p,{children:["To create multiple documents, use the ",(0,r.jsx)(n.code,{children:"createMany"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/app.ts"',children:'import { query } from "@warlock.js/cascade";\r\n\r\nconst users = await query.createMany("users", [\r\n  {\r\n    name: "John Doe",\r\n    isActive: true,\r\n  },\r\n  {\r\n    name: "Jane Doe",\r\n    isActive: false,\r\n  },\r\n]);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This will create two documents in the ",(0,r.jsx)(n.code,{children:"users"})," collection, and return the created documents with ",(0,r.jsx)(n.code,{children:"_id"})," field with each document."]}),"\n",(0,r.jsx)(n.h2,{id:"update-document",children:"Update document"}),"\n",(0,r.jsxs)(n.p,{children:["To update a document, use the ",(0,r.jsx)(n.code,{children:"update"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/app.ts"',children:'import { query } from "@warlock.js/cascade";\r\n\r\nconst user = await query.update(\r\n  "users",\r\n  {\r\n    id: 5123123,\r\n  },\r\n  {\r\n    isActive: false,\r\n  }\r\n);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This will update the document with the given ",(0,r.jsx)(n.code,{children:"id"})," and return the updated document."]}),"\n",(0,r.jsx)(n.h2,{id:"update-multiple-documents",children:"Update multiple documents"}),"\n",(0,r.jsxs)(n.p,{children:["To update multiple documents, use the ",(0,r.jsx)(n.code,{children:"updateMany"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="documents.json"',children:'[\r\n  { "_id": 1, "name": "John", "age": 25 },\r\n  { "_id": 2, "name": "Alice", "age": 30 },\r\n  { "_id": 3, "name": "Bob", "age": 35 },\r\n  { "_id": 4, "name": "Emily", "age": 28 }\r\n]\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/app.ts"',children:'import { query } from "@warlock.js/cascade";\r\n\r\nconst users = await query.updateMany(\r\n  "users",\r\n  { age: { $gt: 25 } }, // Filter: Users with age greater than 25\r\n  { $set: { age: 40 } } // Update: Set the age to 40\r\n);\n'})}),"\n",(0,r.jsx)(n.p,{children:"This will update all users with age greater than 25, and set their age to 40."}),"\n",(0,r.jsx)(n.h2,{id:"replace-document",children:"Replace document"}),"\n",(0,r.jsxs)(n.p,{children:["To replace a document, use the ",(0,r.jsx)(n.code,{children:"replace"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/app.ts"',children:'import { query } from "@warlock.js/cascade";\r\n\r\nconst user = await query.replace(\r\n  "users",\r\n  {\r\n    id: 5123123,\r\n  },\r\n  {\r\n    name: "John Doe",\r\n    isActive: false,\r\n  }\r\n);\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"Warning",type:"warning",children:(0,r.jsx)(n.p,{children:"Please be aware that this will replace the whole document with the given data, and will remove any other fields that are not included in the given data."})}),"\n",(0,r.jsx)(n.h2,{id:"upsert-document",children:"Upsert document"}),"\n",(0,r.jsxs)(n.p,{children:["To upsert a document, use the ",(0,r.jsx)(n.code,{children:"upsert"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/app.ts"',children:'import { query } from "@warlock.js/cascade";\r\n\r\nconst user = await query.upsert(\r\n  "users",\r\n  {\r\n    id: 5123123,\r\n  },\r\n  {\r\n    name: "John Doe",\r\n    isActive: false,\r\n  }\r\n);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This will update the document with the given ",(0,r.jsx)(n.code,{children:"id"})," if it exists, otherwise it will create a new document with the given data."]})]})}function u(e={}){const{wrapper:n}={...(0,s.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>d});var r=t(6540);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,c=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=d(t),p=s,h=m["".concat(o,".").concat(p)]||m[p]||l[p]||c;return t?r.createElement(h,a(a({ref:n},u),{},{components:t})):r.createElement(h,a({ref:n},u))}));u.displayName="MDXCreateElement"}}]);