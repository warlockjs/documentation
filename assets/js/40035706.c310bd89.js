"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5430],{3745:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var r=n(4848),s=n(8453);const i={sidebar_position:3},o="Auth configurations",a={id:"warlock/auth/configurations",title:"Auth configurations",description:"Auth configurations are basically related to current user either it is a logged in user or a guest user, warlock embraces the concept of guest users, so it is important to define the guest user configurations.",source:"@site/docs/warlock/auth/configurations.mdx",sourceDirName:"warlock/auth",slug:"/warlock/auth/configurations",permalink:"/docs/warlock/auth/configurations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"warlock",previous:{title:"Auth Middleware",permalink:"/docs/warlock/auth/auth-middleware"},next:{title:"Auth Model",permalink:"/docs/warlock/auth/auth-model"}},c={},u=[{value:"User Types",id:"user-types",level:3},{value:"JWT Configurations",id:"jwt-configurations",level:2},{value:"Secret Key",id:"secret-key",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"auth-configurations",children:"Auth configurations"}),"\n",(0,r.jsx)(t.p,{children:"Auth configurations are basically related to current user either it is a logged in user or a guest user, warlock embraces the concept of guest users, so it is important to define the guest user configurations."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"userType"}),": The user type model, it's used to identify the current user type, it's required when using ",(0,r.jsx)(t.a,{href:"./../auth/auth-middleware",children:"Auth Middleware"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"jwt.secret"}),": JWT Secret key to sign and verify the JWT token."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"user-types",children:"User Types"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"./../auth/auth-middleware",children:"Auth Middleware"})," requires a user type that should be defined inside the ",(0,r.jsx)(t.code,{children:"auth.userType"})," configurations, so it can identifies the current model to work with it."]}),"\n",(0,r.jsxs)(t.p,{children:["For default installation, there are two user types: ",(0,r.jsx)(t.code,{children:"User"})," and ",(0,r.jsx)(t.code,{children:"Guest"})," models, but you can add more user types, and you can define the default user type."]}),"\n",(0,r.jsxs)(t.p,{children:["Each key inside the ",(0,r.jsx)(t.code,{children:"auth.userType"})," represents the user type name, and the value represents the user type model."]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["Each user type MUST extend ",(0,r.jsx)(t.a,{href:"./../auth/auth-model",children:"Auth model"})," because it generates and stores the JWT token"]})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="src/config/auth.ts"',children:'import { AuthConfigurations, Guest } from "@warlock.js/core";\r\nimport { User } from "app/users/models/user";\r\n\r\nconst authConfigurations: AuthConfigurations = {\r\n  userType: {\r\n    guest: Guest,\r\n    user: User,\r\n  },\r\n  jwt: {\r\n    secret: "secret",\r\n  },\r\n};\r\n\r\nexport default authConfigurations;\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Guest is a simple model that extends the ",(0,r.jsx)(t.a,{href:"./../auth/auth-model",children:"Auth model"})," and it's used to identify the guest user."]}),"\n",(0,r.jsx)(t.h2,{id:"jwt-configurations",children:"JWT Configurations"}),"\n",(0,r.jsxs)(t.p,{children:["Any options supported by ",(0,r.jsx)(t.a,{href:"https://github.com/fastify/fastify-jwt",children:"Fastify JWT"})," can be passed to the ",(0,r.jsx)(t.code,{children:"jwt"})," object."]}),"\n",(0,r.jsx)(t.h3,{id:"secret-key",children:"Secret Key"}),"\n",(0,r.jsxs)(t.p,{children:["The jwt secret key is generated automatically inside the ",(0,r.jsx)(t.code,{children:".env"})," file, so make sure to change it in the production environment."]}),"\n",(0,r.jsxs)(t.p,{children:["Secret key can be primitive (string) or can be an object contains ",(0,r.jsx)(t.code,{children:"public"})," and ",(0,r.jsx)(t.code,{children:"private"})," keys, it's used to sign and verify the JWT token."]}),"\n",(0,r.jsx)(t.p,{children:"This is the only required option for JWT configurations."}),"\n",(0,r.jsxs)(t.p,{children:["Check the ",(0,r.jsx)(t.a,{href:"https://github.com/fastify/fastify-jwt#secret-required",children:"JWT Documentation"})," for more information."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);