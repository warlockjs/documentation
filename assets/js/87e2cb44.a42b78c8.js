"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[151],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(g,s(s({ref:t},u),{},{components:a})):n.createElement(g,s({ref:t},u))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8215:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1},s="Introduction",i={unversionedId:"cascade/getting-started/introduction",id:"cascade/getting-started/introduction",title:"Introduction",description:"Cascade is a package that helps you to connect to MongoDB database and perform CRUD operations for nodejs.",source:"@site/docs/cascade/getting-started/introduction.mdx",sourceDirName:"cascade/getting-started",slug:"/cascade/getting-started/introduction",permalink:"/docs/cascade/getting-started/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mongodb",previous:{title:"Getting Started",permalink:"/docs/category/getting-started-1"},next:{title:"Road Map",permalink:"/docs/cascade/getting-started/roadmap"}},l={},c=[{value:"Why Cascade?",id:"why-cascade",level:2},{value:"Cascade Features",id:"cascade-features",level:2},{value:"Peek inside Cascade",id:"peek-inside-cascade",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Cascade is a package that helps you to connect to MongoDB database and perform CRUD operations for nodejs."),(0,r.kt)("h2",{id:"why-cascade"},"Why Cascade?"),(0,r.kt)("p",null,"There are few packages that manages MongoDB for nodejs applications, most popular one is ",(0,r.kt)("a",{parentName:"p",href:"https://mongoosejs.com/"},"Mongoose"),". But Mongoose is in somehow a little bit hard to use,\nalso there is ",(0,r.kt)("a",{parentName:"p",href:"https://www.prisma.io/"},"Prisma")," which is a great package, it manages multiple databases drivers, but not the best for MongoDB."),(0,r.kt)("h2",{id:"cascade-features"},"Cascade Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Easy to use:")," Cascade is very easy to use, it's just a wrapper around MongoDB driver."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Supports multiple connections:")," You can perform multiple connections to different MongoDB connections and use each one of them separately."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Supports multiple databases:")," Cascade supports multiple databases, you can connect to multiple databases at the same time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Powerful Aggregate framework:")," Cascade has a powerful aggregate framework that helps you to perform complex queries."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Basic CRUD operations:")," Cascade supports basic CRUD operations, you can perform create, read, update and delete operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Events Driven:")," Cascade is events driven, you can listen to events and perform actions, for example before creating, updating or deleting a document."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Powerful Models:")," Cascade has a powerful models system, a Model is a collection manager document based, it manages a collection's document easily with many utilities."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Learning curve:")," Cascade has a very small learning curve, you can learn it in few minutes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pagination support:")," Cascade supports pagination, you can paginate your results easily."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Output formatting:")," Cascade supports output formatting, you can format your output easily when model is sent as a response."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Auto incremented id:")," Cascade supports auto incremented id, you can use it as a primary key for your documents."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Random or sequential id:")," Cascade supports random or sequential id."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Recycle Bin:")," Reduce collection documents by removing the document entirely from the collection, but move it to a separate collection trash."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Migration system:")," Cascade has a migration system, you can create migrations and run them easily."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data casting:")," You can cast your data to a specific type or using custom casting."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Embedded documents:")," Cascade supports single and multiple embedded documents, you can embed documents inside other documents."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Syncing Models"),": Auto update documents when model's data is updated or deleted.")),(0,r.kt)("p",null,"And many more features."),(0,r.kt)("h2",{id:"peek-inside-cascade"},"Peek inside Cascade"),(0,r.kt)("p",null,"Here is a simple example of defining a User model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/models/user.ts"',title:'"src/models/user.ts"'},'import { Model } from "@warlock.js/cascade";\n\nexport class User extends Model {\n  /**\n   * The collection name\n   * Must be defined explicitly.\n   */\n  public static collection = "users";\n}\n')),(0,r.kt)("p",null,"A quick example of creating a user:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/controllers/users.ts"',title:'"src/controllers/users.ts"'},'import { User } from "src/models/user";\n\nexport async function createUser() {\n  const user = await User.create({\n    name: "Hasan Zohdy",\n    email: "hassanzohdy@gmail.com",\n  });\n\n  console.log(user.data);\n}\n')),(0,r.kt)("p",null,"Outputs something similar to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1231412,\n  "_id": "fagtrw43qwedasjoijwq",\n  "name": "Hasan Zohdy",\n  "email": "hassanzohdy@gmail.com",\n  "createdAt": "2023-06-01 00:00:00",\n  "updatedAt": "2023-06-01 00:00:00"\n}\n')))}d.isMDXComponent=!0}}]);