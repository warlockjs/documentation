"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[503],{6831:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>h,contentTitle:()=>l,default:()=>o,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var s=n(4848),r=n(8453);const t={sidebar_position:1},l="Validation Rules List",a={id:"warlock/validation/rules/rules-list",title:"Validation Rules List",description:"The following rules are the builtin validation rules in Warlock:",source:"@site/docs/warlock/validation/rules/rules-list.mdx",sourceDirName:"warlock/validation/rules",slug:"/warlock/validation/rules/rules-list",permalink:"/docs/warlock/validation/rules/rules-list",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"warlock",previous:{title:"Rules",permalink:"/docs/category/rules"},next:{title:"Array Of",permalink:"/docs/warlock/validation/rules/array-of"}},h={},d=[{value:"Create Your Own Validation Rule",id:"create-your-own-validation-rule",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"validation-rules-list",children:"Validation Rules List"}),"\n",(0,s.jsxs)(i.p,{children:["The following rules are the builtin validation rules in ",(0,s.jsx)(i.code,{children:"Warlock"}),":"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./array",children:"array"}),": Checks if the input is an array."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./array-of",children:"arrayOf"}),": Checks if the input is an array of the given type."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./boolean",children:"boolean"}),": Checks if the input is a boolean."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./confirmed",children:"confirmed"}),": Checks if the input is confirmed with another input."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./date",children:"date"}),": Checks if the input is a valid date."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./exists",children:"exists"}),": Checks if the input exists in the database."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./email",children:"email"}),": Checks if the input is a valid email."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./file",children:"file"}),": Checks if the input is a file."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./float",children:"float"}),": Checks if the input is a float number."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./image",children:"image"}),": Checks if the input is an image."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./in",children:"in"}),": Checks if the input is one of the given values."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./int",children:"int"}),": Checks if the input is an integer."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./length",children:"length"}),": Checks if the input length is equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./localized",children:"localized"}),": Checks if the input is an array of objects, each object has ",(0,s.jsx)(i.code,{children:"localeCode"})," and ",(0,s.jsx)(i.code,{children:"text"})," properties."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./max-length",children:"maxLength"}),": Checks if the input length is less than or equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./max",children:"max"}),": Checks if the input is less than or equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./min-length",children:"minLength"}),": Checks if the input length is greater than or equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./min",children:"min"}),": Checks if the input is greater than or equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./missing-if",children:"missingIf"}),": The field under validation must be missing or empty if the another field is equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./number",children:"number"}),": Checks if the input is a number."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./object",children:"object"}),": Checks if the input is an object."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./pattern",children:"pattern"}),": Checks if the input matches the given pattern."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./required",children:"required"}),": Checks if the input is not empty."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./required-if",children:"requiredIf"}),": The field under validation must be present and not empty if the another field is equal to the given value."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./required-if-empty",children:"requiredIfEmpty"}),": The field under validation must be present and not empty if the another field is empty."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./required-with",children:"requiredWith"}),": The field under validation must be present and not empty only if any of the other specified fields are present and not empty."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./required-with-all",children:"requiredWithAll"}),": The field under validation must be present and not empty only if all of the other specified fields are present and not empty."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./scalar",children:"scalar"}),": Checks if the input is a string, number or boolean."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./string",children:"string"}),": Checks if the input is a string."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./stringify",children:"stringify"}),": Checks if the input is a string or a number."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./unique",children:"unique"}),": Checks if the input is unique in the database."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./uploadable",children:"uploadable"}),": Checks if the input's value is a hash of ",(0,s.jsx)(i.a,{href:"/docs/warlock/upload/upload-model",children:"Uploaded File"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"./url",children:"url"}),": Checks if the input is a valid URL."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"create-your-own-validation-rule",children:"Create Your Own Validation Rule"}),"\n",(0,s.jsxs)(i.p,{children:["To create a new rule, ",(0,s.jsx)(i.a,{href:"./create-your-own-rule",children:"please head to this page"}),"."]})]})}function o(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>a});var s=n(6540);const r={},t=s.createContext(r);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);