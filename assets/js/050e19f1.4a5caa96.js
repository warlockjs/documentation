"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[5225],{3905:(e,n,o)=>{o.d(n,{Zo:()=>s,kt:()=>d});var t=o(7294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function i(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?i(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function a(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var g=t.createContext({}),c=function(e){var n=t.useContext(g),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},s=function(e){var n=c(e.components);return t.createElement(g.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=c(o),f=r,d=u["".concat(g,".").concat(f)]||u[f]||p[f]||i;return o?t.createElement(d,l(l({ref:n},s),{},{components:o})):t.createElement(d,l({ref:n},s))}));function d(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=o.length,l=new Array(i);l[0]=f;var a={};for(var g in n)hasOwnProperty.call(n,g)&&(a[g]=n[g]);a.originalType=e,a[u]="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=o[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,o)}f.displayName="MDXCreateElement"},3117:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>g,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=o(7462),r=(o(7294),o(3905));const i={sidebar_position:2},l="Logging Configurations",a={unversionedId:"warlock/logger/configurations",id:"warlock/logger/configurations",title:"Logging Configurations",description:"To set logging configurations, modify src/config/log.ts file.",source:"@site/docs/warlock/logger/configurations.mdx",sourceDirName:"warlock/logger",slug:"/warlock/logger/configurations",permalink:"/docs/warlock/logger/configurations",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"warlock",previous:{title:"Introduction",permalink:"/docs/warlock/logger/introduction"},next:{title:"Utils",permalink:"/docs/category/utils"}},g={},c=[{value:"Enable logging",id:"enable-logging",level:2},{value:"Environment channels",id:"environment-channels",level:2}],s={toc:c},u="wrapper";function p(e){let{components:n,...o}=e;return(0,r.kt)(u,(0,t.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"logging-configurations"},"Logging Configurations"),(0,r.kt)("p",null,"To set logging configurations, modify ",(0,r.kt)("inlineCode",{parentName:"p"},"src/config/log.ts")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/log.ts"',title:'"src/config/log.ts"'},'import { ConsoleLog } from "@mongez/logger";\nimport { LogConfigurations } from "@mongez/warlock";\n\nconst consoleLog = new ConsoleLog();\n\nconst logConfigurations: LogConfigurations = {\n  enabled: true,\n  channels: [consoleLog],\n};\n\nexport default logConfigurations;\n')),(0,r.kt)("p",null,"This will enable the console logger, and set it as the default logger."),(0,r.kt)("p",null,"You can add more channels to the ",(0,r.kt)("inlineCode",{parentName:"p"},"channels")," array from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hassanzohdy/logger"},"Mongez Logger")," based on your needs."),(0,r.kt)("h2",{id:"enable-logging"},"Enable logging"),(0,r.kt)("p",null,"By default logging is enabled in the application, you can control this behavior by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"enabled")," property in the logger configurations."),(0,r.kt)("h2",{id:"environment-channels"},"Environment channels"),(0,r.kt)("p",null,"If we want to set different channels for different environments, then add the environment property in our exported object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/log.ts"',title:'"src/config/log.ts"'},'import { FileLog, ConsoleLog } from "@mongez/logger";\nimport { LogConfigurations } from "@mongez/warlock";\n\nconst consoleLog = new ConsoleLog();\nconst fileLog = new FileLog();\n\nconst logConfigurations: LogConfigurations = {\n  enabled: true,\n  channels: [consoleLog],\n  production: {\n    channels: [\n      fileLog,\n      ],\n    },\n  },\n};\n\nexport default logConfigurations;\n')),(0,r.kt)("p",null,"In this case, the console logger will be used in all environments except the production environment, where the file logger will be used instead for production only."))}p.isMDXComponent=!0}}]);