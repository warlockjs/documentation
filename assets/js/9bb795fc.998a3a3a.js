"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7852],{9358:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=s(4848),t=s(8453);const o={sidebar_position:4},i="Auth Model",c={id:"warlock/auth/auth-model",title:"Auth Model",description:"Auth model is an abstract class that is used for generating and validating access tokens.",source:"@site/docs/warlock/auth/auth-model.mdx",sourceDirName:"warlock/auth",slug:"/warlock/auth/auth-model",permalink:"/docs/warlock/auth/auth-model",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"warlock",previous:{title:"Auth configurations",permalink:"/docs/warlock/auth/configurations"},next:{title:"Guests",permalink:"/docs/warlock/auth/guests"}},a={},l=[{value:"Extending Auth Model",id:"extending-auth-model",level:2},{value:"Generate Access Token",id:"generate-access-token",level:2},{value:"Verifying user credentials",id:"verifying-user-credentials",level:2},{value:"Login Example",id:"login-example",level:2},{value:"Removing Access Token",id:"removing-access-token",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"auth-model",children:"Auth Model"}),"\n",(0,r.jsxs)(n.p,{children:["Auth model is an ",(0,r.jsx)(n.code,{children:"abstract"})," class that is used for generating and validating access tokens."]}),"\n",(0,r.jsx)(n.h2,{id:"extending-auth-model",children:"Extending Auth Model"}),"\n",(0,r.jsx)(n.p,{children:"The primary use case for extending the auth model is to manage access tokens and password."}),"\n",(0,r.jsx)(n.h2,{id:"generate-access-token",children:"Generate Access Token"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"User"})," model that extends the ",(0,r.jsx)(n.code,{children:"Auth"})," model can use ",(0,r.jsx)(n.code,{children:"generateAccessToken"})," when the user logs in."]}),"\n",(0,r.jsx)(n.h2,{id:"verifying-user-credentials",children:"Verifying user credentials"}),"\n",(0,r.jsxs)(n.p,{children:["To verify the user credentials, you can use the ",(0,r.jsx)(n.code,{children:"attempt"})," method from ",(0,r.jsx)(n.code,{children:"Auth"})," model."]}),"\n",(0,r.jsxs)(n.p,{children:["This method accepts an object that will be used to fetch the user from the database, the only required key in the object is the ",(0,r.jsx)(n.code,{children:"password"})," that will not be used to fetch the user, but will be used to verify the user password."]}),"\n",(0,r.jsx)(n.h2,{id:"login-example",children:"Login Example"}),"\n",(0,r.jsx)(n.p,{children:"Consider the following example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'{7,24} title="src/app/users/controllers/login.ts"',children:'import { Request, Response } from "@warlock.js/core";\r\nimport { User } from "../models/user";\r\n\r\nexport default async function login(request: Request, response: Response) {\r\n  const user: User = request.user;\r\n\r\n  const token = await user.generateAccessToken();\r\n\r\n  return response.success({\r\n    user: {\r\n      accessToken: token,\r\n      ...(await user.toJSON()),\r\n    },\r\n  });\r\n}\r\n\r\nlogin.validation = {\r\n  rules: {\r\n    email: ["required", "email"],\r\n    password: ["required"],\r\n  },\r\n  validate: async (request: Request, response: Response) => {\r\n    // verify the user credentials\r\n    const user = await User.attempt(request.only(["email", "password"]));\r\n\r\n    if (!user) {\r\n      return response.badRequest({\r\n        error: "Invalid credentials",\r\n      });\r\n    }\r\n\r\n    if (!user.isActive) {\r\n      return response.badRequest({\r\n        error: "Your account is not active",\r\n      });\r\n    }\r\n\r\n    request.user = user;\r\n  },\r\n};\n'})}),"\n",(0,r.jsxs)(n.p,{children:["We started the ",(0,r.jsx)(n.code,{children:"validate"})," method by verifying the user credentials using ",(0,r.jsx)(n.code,{children:"User.attempt"})," method, this method will return ",(0,r.jsx)(n.code,{children:"null"})," if the user is not found or the password is incorrect."]}),"\n",(0,r.jsx)(n.p,{children:"If the user is found, we check if the user is active, if not, we return an error."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"This is an optional step based on your application logic."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"removing-access-token",children:"Removing Access Token"}),"\n",(0,r.jsxs)(n.p,{children:["This will be handy in the ",(0,r.jsx)(n.code,{children:"logout"})," request, so we can remove the access token from the database."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'{7} title="src/app/users/controllers/logout.ts"',children:'import { Request, Response } from "@warlock.js/core";\r\nimport { User } from "../models/user";\r\n\r\nexport default async function logout(\r\n  request: Request<User>,\r\n  response: Response\r\n) {\r\n  const user: User = request.user;\r\n\r\n  await user.removeAccessToken();\r\n\r\n  delete request.user;\r\n\r\n  return response.success();\r\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);