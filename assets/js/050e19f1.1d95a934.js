"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[9426],{4114:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>a});var r=o(4848),t=o(5680);const i={sidebar_position:2},l="Logging Configurations",s={id:"warlock/logger/configurations",title:"Logging Configurations",description:"To set logging configurations, modify src/config/log.ts file.",source:"@site/docs/warlock/logger/configurations.mdx",sourceDirName:"warlock/logger",slug:"/warlock/logger/configurations",permalink:"/docs/warlock/logger/configurations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"warlock",previous:{title:"Introduction",permalink:"/docs/warlock/logger/introduction"},next:{title:"Utils",permalink:"/docs/category/utils"}},c={},a=[{value:"Enable logging",id:"enable-logging",level:2},{value:"Environment channels",id:"environment-channels",level:2}];function g(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"logging-configurations",children:"Logging Configurations"}),"\n",(0,r.jsxs)(n.p,{children:["To set logging configurations, modify ",(0,r.jsx)(n.code,{children:"src/config/log.ts"})," file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/config/log.ts"',children:'import { ConsoleLog } from "@mongez/logger";\r\nimport { LogConfigurations } from "@warlock.js/core";\r\n\r\nconst consoleLog = new ConsoleLog();\r\n\r\nconst logConfigurations: LogConfigurations = {\r\n  enabled: true,\r\n  channels: [consoleLog],\r\n};\r\n\r\nexport default logConfigurations;\n'})}),"\n",(0,r.jsx)(n.p,{children:"This will enable the console logger, and set it as the default logger."}),"\n",(0,r.jsxs)(n.p,{children:["You can add more channels to the ",(0,r.jsx)(n.code,{children:"channels"})," array from ",(0,r.jsx)(n.a,{href:"https://github.com/hassanzohdy/logger",children:"Mongez Logger"})," based on your needs."]}),"\n",(0,r.jsx)(n.h2,{id:"enable-logging",children:"Enable logging"}),"\n",(0,r.jsxs)(n.p,{children:["By default logging is enabled in the application, you can control this behavior by setting the ",(0,r.jsx)(n.code,{children:"enabled"})," property in the logger configurations."]}),"\n",(0,r.jsx)(n.h2,{id:"environment-channels",children:"Environment channels"}),"\n",(0,r.jsx)(n.p,{children:"If we want to set different channels for different environments, then add the environment property in our exported object."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="src/config/log.ts"',children:'import { FileLog, ConsoleLog } from "@mongez/logger";\r\nimport { LogConfigurations } from "@warlock.js/core";\r\n\r\nconst consoleLog = new ConsoleLog();\r\nconst fileLog = new FileLog();\r\n\r\nconst logConfigurations: LogConfigurations = {\r\n  enabled: true,\r\n  channels: [consoleLog],\r\n  production: {\r\n    channels: [\r\n      fileLog,\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nexport default logConfigurations;\n'})}),"\n",(0,r.jsx)(n.p,{children:"In this case, the console logger will be used in all environments except the production environment, where the file logger will be used instead for production only."})]})}function d(e={}){const{wrapper:n}={...(0,t.RP)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},5680:(e,n,o)=>{o.d(n,{RP:()=>a});var r=o(6540);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function i(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?i(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function s(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var c=r.createContext({}),a=function(e){var n=r.useContext(c),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=a(o),f=t,p=u["".concat(c,".").concat(f)]||u[f]||g[f]||i;return o?r.createElement(p,l(l({ref:n},d),{},{components:o})):r.createElement(p,l({ref:n},d))}));d.displayName="MDXCreateElement"}}]);