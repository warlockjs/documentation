"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3123],{2120:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>a});var s=o(4848),r=o(8453);const n={sidebar_position:5},i="Promise All Object",l={id:"warlock/utils/promise-all-object",title:"Promise All Object",description:"promiseAllObject is a utility function that allows you to run multiple promises at once, and return the results as an object.",source:"@site/docs/warlock/utils/promise-all-object.mdx",sourceDirName:"warlock/utils",slug:"/warlock/utils/promise-all-object",permalink:"/docs/warlock/utils/promise-all-object",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"warlock",previous:{title:"Sleep",permalink:"/docs/warlock/utils/sleep"},next:{title:"Sluggable",permalink:"/docs/warlock/utils/sluggable"}},c={},a=[{value:"Usage",id:"usage",level:2}];function p(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"promise-all-object",children:"Promise All Object"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"promiseAllObject"})," is a utility function that allows you to run multiple promises at once, and return the results as an object."]}),"\n",(0,s.jsxs)(t.p,{children:["This is a more convenient way to use ",(0,s.jsx)(t.code,{children:"Promise.all"})," when you need to return the results as an object."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.p,{children:["In anywhere in your code, you can use the ",(0,s.jsx)(t.code,{children:"promiseAllObject"})," function as follows:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",metastring:'title="src/app/posts/controllers/get-posts.ts"',children:'import { promiseAllObject, Request, Response } from "@warlock.js/core";\r\nimport postsRepository from "./../repositories/posts";\r\nimport categoriesRepository from "app/categories/repositories/categories";\r\n\r\nexport default async function getPosts(request: Request, response: Response) {\r\n  const { posts, categories } = await promiseAllToObject({\r\n    categories: categoriesRepository.all(),\r\n    posts: postsRepository.all(),\r\n  });\r\n  // rest of the code\r\n}\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["Please note that you should not use the ",(0,s.jsx)(t.code,{children:"await"})," keyword beside each promise, because ",(0,s.jsx)(t.code,{children:"promiseAllObject"})," will do that for you."]})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>l});var s=o(6540);const r={},n=s.createContext(r);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);