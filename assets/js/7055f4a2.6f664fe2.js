"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[1475],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>h});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return t?n.createElement(h,o(o({ref:r},p),{},{components:t})):n.createElement(h,o({ref:r},p))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},788:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const i={sidebar_position:5},o="Base Cache Driver",c={unversionedId:"warlock/cache/base-cache-driver",id:"warlock/cache/base-cache-driver",title:"Base Cache Driver",description:"The base cache driver is an abstract class that all built-in cache drivers are derived from. It defines the common methods and properties to reduce the amount of code duplication.",source:"@site/docs/warlock/cache/base-cache-driver.mdx",sourceDirName:"warlock/cache",slug:"/warlock/cache/base-cache-driver",permalink:"/documentation/docs/warlock/cache/base-cache-driver",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"warlock",previous:{title:"Cache Driver Interface",permalink:"/documentation/docs/warlock/cache/cache-driver-interface"},next:{title:"Redis Cache Driver",permalink:"/documentation/docs/warlock/cache/redis"}},l={},s=[{value:"Required properties",id:"required-properties",level:2},{value:"Implemented methods",id:"implemented-methods",level:2}],p={toc:s},d="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(d,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"base-cache-driver"},"Base Cache Driver"),(0,a.kt)("p",null,"The base cache driver is an abstract class that all built-in cache drivers are derived from. It defines the common methods and properties to reduce the amount of code duplication."),(0,a.kt)("h2",{id:"required-properties"},"Required properties"),(0,a.kt)("p",null,"The Base Cache Driver implements ",(0,a.kt)("a",{parentName:"p",href:"./cache-driver-interface"},"CacheDriverInterface")," and requires only one property to be defined the ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," property, this property is used to identify the cache driver name that will be used for logging purposes."),(0,a.kt)("h2",{id:"implemented-methods"},"Implemented methods"),(0,a.kt)("p",null,"It implements the following methods:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setOptions"),": This method is used to set the cache driver options."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parseKey"),": This method is used to parse the cache key."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"log"),": This method is used to log messages to the logger.")),(0,a.kt)("p",null,"Our base driver will call ",(0,a.kt)("a",{parentName:"p",href:"./utils#parse-cache-key"},"Prase Cache Key utility")," when implementing the ",(0,a.kt)("inlineCode",{parentName:"p"},"parseKey")," method."))}u.isMDXComponent=!0}}]);