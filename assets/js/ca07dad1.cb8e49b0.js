"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[6419],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var i=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=i.createContext({}),p=function(e){var t=i.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return i.createElement(u.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),h=p(a),f=r,c=h["".concat(u,".").concat(f)]||h[f]||m[f]||n;return a?i.createElement(c,l(l({ref:t},s),{},{components:a})):i.createElement(c,l({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,l=new Array(n);l[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[h]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<n;p++)l[p]=a[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}f.displayName="MDXCreateElement"},1030:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>p});var i=a(7462),r=(a(7294),a(3905));const n={sidebar_position:1},l="Validation Rules List",o={unversionedId:"warlock/validation/rules/rules-list",id:"warlock/validation/rules/rules-list",title:"Validation Rules List",description:"The following rules are the builtin validation rules in Warlock:",source:"@site/docs/warlock/validation/rules/rules-list.mdx",sourceDirName:"warlock/validation/rules",slug:"/warlock/validation/rules/rules-list",permalink:"/documentation/docs/warlock/validation/rules/rules-list",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"warlock",previous:{title:"Rules",permalink:"/documentation/docs/category/rules"},next:{title:"Array Of",permalink:"/documentation/docs/warlock/validation/rules/array-of"}},u={},p=[{value:"Create Your Own Validation Rule",id:"create-your-own-validation-rule",level:2}],s={toc:p},h="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,i.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"validation-rules-list"},"Validation Rules List"),(0,r.kt)("p",null,"The following rules are the builtin validation rules in ",(0,r.kt)("inlineCode",{parentName:"p"},"Warlock"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./array"},"array"),": Checks if the input is an array."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./array-of"},"arrayOf"),": Checks if the input is an array of the given type."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./boolean"},"boolean"),": Checks if the input is a boolean."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./confirmed"},"confirmed"),": Checks if the input is confirmed with another input."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./date"},"date"),": Checks if the input is a valid date."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./exists"},"exists"),": Checks if the input exists in the database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./email"},"email"),": Checks if the input is a valid email."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./file"},"file"),": Checks if the input is a file."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./float"},"float"),": Checks if the input is a float number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./image"},"image"),": Checks if the input is an image."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./in"},"in"),": Checks if the input is one of the given values."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./int"},"int"),": Checks if the input is an integer."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./length"},"length"),": Checks if the input length is equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./localized"},"localized"),": Checks if the input is an array of objects, each object has ",(0,r.kt)("inlineCode",{parentName:"li"},"localeCode")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"text")," properties."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./max-length"},"maxLength"),": Checks if the input length is less than or equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./max"},"max"),": Checks if the input is less than or equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./min-length"},"minLength"),": Checks if the input length is greater than or equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./min"},"min"),": Checks if the input is greater than or equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./missing-if"},"missingIf"),": The field under validation must be missing or empty if the another field is equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./number"},"number"),": Checks if the input is a number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./object"},"object"),": Checks if the input is an object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./pattern"},"pattern"),": Checks if the input matches the given pattern."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./required"},"required"),": Checks if the input is not empty."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./required-if"},"requiredIf"),": The field under validation must be present and not empty if the another field is equal to the given value."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./required-if-empty"},"requiredIfEmpty"),": The field under validation must be present and not empty if the another field is empty."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./required-with"},"requiredWith"),": The field under validation must be present and not empty only if any of the other specified fields are present and not empty."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./required-with-all"},"requiredWithAll"),": The field under validation must be present and not empty only if all of the other specified fields are present and not empty."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./scalar"},"scalar"),": Checks if the input is a string, number or boolean."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./string"},"string"),": Checks if the input is a string."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./stringify"},"stringify"),": Checks if the input is a string or a number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./unique"},"unique"),": Checks if the input is unique in the database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./uploadable"},"uploadable"),": Checks if the input's value is a hash of ",(0,r.kt)("a",{parentName:"li",href:"/documentation/docs/warlock/upload/upload-model"},"Uploaded File")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./url"},"url"),": Checks if the input is a valid URL.")),(0,r.kt)("h2",{id:"create-your-own-validation-rule"},"Create Your Own Validation Rule"),(0,r.kt)("p",null,"To create a new rule, ",(0,r.kt)("a",{parentName:"p",href:"./create-your-own-rule"},"please head to this page"),"."))}m.isMDXComponent=!0}}]);