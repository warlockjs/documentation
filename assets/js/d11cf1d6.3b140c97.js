"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[529],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?o.createElement(h,a(a({ref:t},u),{},{components:n})):o.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<r;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5379:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(7462),i=(n(7294),n(3905));const r={sidebar_position:3},a="Http configurations",l={unversionedId:"warlock/http/configurations",id:"warlock/http/configurations",title:"Http configurations",description:"Http configurations are used to set the default http configurations, like the port, host, and other configurations.",source:"@site/docs/warlock/http/configurations.mdx",sourceDirName:"warlock/http",slug:"/warlock/http/configurations",permalink:"/docs/warlock/http/configurations",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"warlock",previous:{title:"Routes",permalink:"/docs/warlock/http/routes"},next:{title:"Request",permalink:"/docs/warlock/http/request"}},s={},p=[{value:"Defining http configurations",id:"defining-http-configurations",level:2},{value:"Http port",id:"http-port",level:3},{value:"Rate Limit",id:"rate-limit",level:3},{value:"Cors",id:"cors",level:2},{value:"Why Cors?",id:"why-cors",level:3},{value:"Cors configurations",id:"cors-configurations",level:3},{value:"Cors Origin",id:"cors-origin",level:3},{value:"Cors Methods",id:"cors-methods",level:3}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"http-configurations"},"Http configurations"),(0,i.kt)("p",null,"Http configurations are used to set the default http configurations, like the port, host, and other configurations."),(0,i.kt)("h2",{id:"defining-http-configurations"},"Defining http configurations"),(0,i.kt)("p",null,"Let's go to our ",(0,i.kt)("inlineCode",{parentName:"p"},"src/config/http.ts")," file and define the http configurations."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/http.ts"',title:'"src/config/http.ts"'},'import { env } from "@mongez/dotenv";\nimport { HttpConfigurations } from "@warlock.js/core";\n\nconst httpConfigurations: HttpConfigurations = {\n  port: env("PORT", 3000),\n  host: env("HOST", "localhost"),\n  log: true,\n  fileUploadLimit: 12 * 1024 * 1024 * 1024,\n  rateLimit: {\n    max: 260,\n    duration: 60 * 1000, // 1 minute\n  },\n  cors: {\n    // allowed origins\n    origin: "*", // change it to the list of allowed origins or a string\n    // allowed methods\n    methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"],\n  },\n  middleware: {\n    // apply the middleware to all routes\n    all: [],\n    // apply the middleware to specific routes\n    only: {\n      // Example:\n      // routes: [],\n      // namedRoutes: ["users.list"],\n      // middleware: [authMiddleware("user")],\n      routes: [],\n      namedRoutes: [],\n      middleware: [],\n    },\n    // exclude the middleware from specific routes\n    except: {\n      routes: [],\n      namedRoutes: [],\n      middleware: [],\n    },\n  },\n};\n\nexport default httpConfigurations;\n')),(0,i.kt)("p",null,"Let's break down the above code:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"port"),": The port that the application will run on, default to ",(0,i.kt)("inlineCode",{parentName:"li"},"3000"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"host"),": The host that the application will run on, default to ",(0,i.kt)("inlineCode",{parentName:"li"},"localhost"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"log"),": Enable or disable the http logs, default to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fileUploadLimit"),": The file upload limit, if not defined in env then set it to ",(0,i.kt)("inlineCode",{parentName:"li"},"12 * 1024 * 1024 * 1024")," (12 MB), default is ",(0,i.kt)("inlineCode",{parentName:"li"},"10 MB"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rateLimit"),": The rate limit configurations, it's used to limit the number of requests per minute, default to ",(0,i.kt)("inlineCode",{parentName:"li"},"60")," requests per minute but we applied it to ",(0,i.kt)("inlineCode",{parentName:"li"},"260")," requests per minute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"middleware"),": The middleware configurations, it's used to apply the middleware to all routes, or to specific routes, or to exclude the middleware from specific routes.")),(0,i.kt)("h3",{id:"http-port"},"Http port"),(0,i.kt)("p",null,"If port is being used in development mode, then ",(0,i.kt)("inlineCode",{parentName:"p"},"Warlock")," will try to find another port to run the application on."),(0,i.kt)("h3",{id:"rate-limit"},"Rate Limit"),(0,i.kt)("p",null,"Rate limit is used to limit the number of requests per minute, it's useful to prevent the application from being attacked by sending a lot of requests in a short time."),(0,i.kt)("p",null,"The default value is ",(0,i.kt)("inlineCode",{parentName:"p"},"60")," requests per minute, but if the application has a lot of requests, then you can increase the value as applied above."),(0,i.kt)("h2",{id:"cors"},"Cors"),(0,i.kt)("p",null,"Cors stands for ",(0,i.kt)("inlineCode",{parentName:"p"},"Cross-Origin Resource Sharing"),", it's a mechanism that allows a web application running at one origin to access the resources from a server running at a different origin."),(0,i.kt)("h3",{id:"why-cors"},"Why Cors?"),(0,i.kt)("p",null,"Cors is used to make sure that the application can access the resources from a different origin, for example, if you have a frontend application running on ",(0,i.kt)("inlineCode",{parentName:"p"},"https://example.com")," and you have an API running on ",(0,i.kt)("inlineCode",{parentName:"p"},"https://api.example.com")," then you need to enable Cors to make sure that the frontend application can access the API."),(0,i.kt)("h3",{id:"cors-configurations"},"Cors configurations"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"Warlock")," allows all origins, but you can change this behavior by setting the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"cors")," to the list of allowed origins."),(0,i.kt)("h3",{id:"cors-origin"},"Cors Origin"),(0,i.kt)("p",null,"As mentioned above the ",(0,i.kt)("inlineCode",{parentName:"p"},"origin")," is used to set the list of allowed origins."),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"origin")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"*")," it will accept all origins, but if you want to set a list of allowed origins you can set it to an array of strings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/http.ts"',title:'"src/config/http.ts"'},'const corsConfigurations = {\n  // allowed origins\n  origin: ["https://example.com", "https://api.example.com"],\n  // allowed methods\n  methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"],\n};\n')),(0,i.kt)("p",null,"Or you can just pass a string to it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/http.ts"',title:'"src/config/http.ts"'},'const corsConfigurations = {\n  // allowed origins\n  origin: "https://example.com",\n  // allowed methods\n  methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"],\n};\n')),(0,i.kt)("h3",{id:"cors-methods"},"Cors Methods"),(0,i.kt)("p",null,"Probably you don't need to change this, but if you want to change the allowed methods you can change it by setting the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"methods")," to the list of allowed methods."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/config/http.ts"',title:'"src/config/http.ts"'},'const corsConfigurations = {\n  // allowed origins\n  origin: "*",\n  // allowed methods\n  methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"],\n};\n')),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Be aware that browsers use the ",(0,i.kt)("inlineCode",{parentName:"p"},"OPTIONS")," method to check if the API is allowed to be accessed from the frontend application, so make sure to add it to the list of allowed methods.")))}d.isMDXComponent=!0}}]);