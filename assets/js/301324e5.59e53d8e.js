"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[7076],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:9},l="Sorting",s={unversionedId:"cascade/aggregate/sort",id:"cascade/aggregate/sort",title:"Sorting",description:"Sorting is the process of arranging documents in a collection in a specific order, The Aggregate class provides multiple methods to easily sort your documents.",source:"@site/docs/cascade/aggregate/sort.mdx",sourceDirName:"cascade/aggregate",slug:"/cascade/aggregate/sort",permalink:"/docs/cascade/aggregate/sort",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mongodb",previous:{title:"Fetching Documents",permalink:"/docs/cascade/aggregate/fetching"},next:{title:"Data Update",permalink:"/docs/cascade/aggregate/update"}},i={},c=[{value:"Sort method",id:"sort-method",level:2},{value:"sortByDesc method",id:"sortbydesc-method",level:2},{value:"Sort By multiple fields",id:"sort-by-multiple-fields",level:2},{value:"Sort randomly",id:"sort-randomly",level:2},{value:"Sort by latest",id:"sort-by-latest",level:2},{value:"Sort by oldest",id:"sort-by-oldest",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sorting"},"Sorting"),(0,r.kt)("p",null,"Sorting is the process of arranging documents in a collection in a specific order, The ",(0,r.kt)("inlineCode",{parentName:"p"},"Aggregate")," class provides multiple methods to easily sort your documents."),(0,r.kt)("h2",{id:"sort-method"},"Sort method"),(0,r.kt)("p",null,"This is the basic method to sort using a single field."),(0,r.kt)("p",null,"Method Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'public sort(field: string, order?: "asc" | "desc" = "asc"): this;\n')),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const users = await aggregate.sort("age", "desc").get();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"orderBy")," is an alias for ",(0,r.kt)("inlineCode",{parentName:"p"},"sort")," method.")),(0,r.kt)("h2",{id:"sortbydesc-method"},"sortByDesc method"),(0,r.kt)("p",null,"This method is an alias for ",(0,r.kt)("inlineCode",{parentName:"p"},"sort")," method with ",(0,r.kt)("inlineCode",{parentName:"p"},"desc")," order."),(0,r.kt)("p",null,"Method Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"public sortByDesc(field: string): this;\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const users = await aggregate.sortByDesc("age").get();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"orderByDesc")," is an alias for ",(0,r.kt)("inlineCode",{parentName:"p"},"sortByDesc")," method.")),(0,r.kt)("h2",{id:"sort-by-multiple-fields"},"Sort By multiple fields"),(0,r.kt)("p",null,"If we want to sort by multiple fields, we can use ",(0,r.kt)("inlineCode",{parentName:"p"},"sortBy")," method."),(0,r.kt)("p",null,"Method Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'public sortBy(columns: Record<string, "desc" | "asc">): this;\n')),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const users = await aggregate\n  .sortBy({\n    age: "desc",\n    name: "asc",\n  })\n  .get();\n')),(0,r.kt)("p",null,"This will update documents in the collection to be sorted by ",(0,r.kt)("inlineCode",{parentName:"p"},"age")," in descending order, then by ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," in ascending order."),(0,r.kt)("h2",{id:"sort-randomly"},"Sort randomly"),(0,r.kt)("p",null,"If you want to sort documents randomly, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"random")," method, however, this method requires a ",(0,r.kt)("inlineCode",{parentName:"p"},"limit"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"@see ",(0,r.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sample/"},"Sample"))),(0,r.kt)("p",null,"Method Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"public random(limit: number): this;\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const users = await aggregate.random(10).get();\n")),(0,r.kt)("h2",{id:"sort-by-latest"},"Sort by latest"),(0,r.kt)("p",null,"We can use ",(0,r.kt)("inlineCode",{parentName:"p"},"latest")," method to sort documents using ",(0,r.kt)("inlineCode",{parentName:"p"},"createdAt")," field."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"We can not rely on ",(0,r.kt)("inlineCode",{parentName:"p"},"_id")," as it would return unexpected results if we used ",(0,r.kt)("inlineCode",{parentName:"p"},"_id"))),(0,r.kt)("p",null,"Method Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'public latest(column = "createdAt"): this;\n')),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const users = await aggregate.latest().get();\n")),(0,r.kt)("p",null,"If you want to sort by a different column, you can pass it as the first argument."),(0,r.kt)("h2",{id:"sort-by-oldest"},"Sort by oldest"),(0,r.kt)("p",null,"Same thing applies here but this time we use ",(0,r.kt)("inlineCode",{parentName:"p"},"oldest")," method, If we need to sort documents by oldest documents first, we can use ",(0,r.kt)("inlineCode",{parentName:"p"},"oldest")," method."),(0,r.kt)("p",null,"Method Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'public oldest(column = "createdAt"): this;\n')),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const users = await aggregate.oldest().get();\n")))}u.isMDXComponent=!0}}]);