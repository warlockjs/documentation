"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[1588],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(r),f=n,m=c["".concat(p,".").concat(f)]||c[f]||d[f]||o;return r?a.createElement(m,l(l({ref:t},u),{},{components:r})):a.createElement(m,l({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6367:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:31},l="Uploadable",i={unversionedId:"warlock/validation/rules/uploadable",id:"warlock/validation/rules/uploadable",title:"Uploadable",description:"Check if the input value is a hash of Uploadable.",source:"@site/docs/warlock/validation/rules/uploadable.mdx",sourceDirName:"warlock/validation/rules",slug:"/warlock/validation/rules/uploadable",permalink:"/mongez/docs/warlock/validation/rules/uploadable",draft:!1,tags:[],version:"current",sidebarPosition:31,frontMatter:{sidebar_position:31},sidebar:"warlock",previous:{title:"Unique",permalink:"/mongez/docs/warlock/validation/rules/unique"},next:{title:"Url",permalink:"/mongez/docs/warlock/validation/rules/url"}},p={},s=[{value:"Example",id:"example",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"uploadable"},"Uploadable"),(0,n.kt)("p",null,"Check if the input value is a hash of ",(0,n.kt)("a",{parentName:"p",href:"./../../upload/upload-model"},"Uploadable"),"."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This rule is a database dependent rule. It requires a database connection to run against the input value.")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The validation rule ",(0,n.kt)("strong",{parentName:"p"},"requires a value")," to run against the input value.")),(0,n.kt)("p",null,"Basically it works by uploading the files in a separate request then attach the upload hash to certain model, i.e user avatar, post image etc."),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/posts/controllers/create-post.ts"',title:'"src/app/posts/controllers/create-post.ts"'},'// ...\ncreatePost.validation = {\n  rules: {\n    title: ["required", "stringify"],\n    image: ["required", "uploadable"],\n  },\n};\n')),(0,n.kt)("p",null,"The rule will fetch the ",(0,n.kt)("inlineCode",{parentName:"p"},"uploads collection")," for the given hash and check if the hash exists, if not exists, the validation will fail."))}d.isMDXComponent=!0}}]);