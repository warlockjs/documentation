"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7439],{814:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>o,toc:()=>a});var i=t(4848),s=t(8453);const d={sidebar_position:12},c="Master Mind",o={id:"cascade/advanced/master-mind",title:"Master Mind",description:"Introduction",source:"@site/docs/cascade/advanced/master-mind.mdx",sourceDirName:"cascade/advanced",slug:"/cascade/advanced/master-mind",permalink:"/docs/cascade/advanced/master-mind",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"mongodb",previous:{title:"Auto Increment",permalink:"/docs/cascade/advanced/auto-increment"},next:{title:"TODO",permalink:"/docs/cascade/advanced/todo"}},r={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Master Mind Collection",id:"master-mind-collection",level:2},{value:"Get last id",id:"get-last-id",level:2},{value:"Generate next id",id:"generate-next-id",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"master-mind",children:"Master Mind"}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MasterMind"})," is helper class that is fully dedicated to manage the model ",(0,i.jsx)(n.code,{children:"id"})," field, it is used internally by the model class to keep tracking of generated ids and gets the proper next id."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["For SQL People, consider it more likely the ",(0,i.jsx)(n.code,{children:"INFORMATION_SCHEMA"})," table."]})}),"\n",(0,i.jsx)(n.h2,{id:"master-mind-collection",children:"Master Mind Collection"}),"\n",(0,i.jsxs)(n.p,{children:["Any model that is being saved, the model's collection name and the last saved id are stored in ",(0,i.jsx)(n.code,{children:"MasterMind"})," collection, the purpose of this collection is to keep tracking of the last saved id for each collection"]}),"\n",(0,i.jsx)(n.h2,{id:"get-last-id",children:"Get last id"}),"\n",(0,i.jsx)(n.p,{children:"If you want to get the last id of any collection, consider the following snippet:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"src/app.ts",children:'import { masterMind } from "@warlock.js/cascade";\r\n\r\nasync function main() {\r\n  const lastId = await masterMind.getLastId("categories");\r\n\r\n  console.log(lastId); // 512344\r\n}\r\n\r\nmain();\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["We imported ",(0,i.jsx)(n.code,{children:"masterMind"})," as an object, if you want to create a new instance of it, you may import ",(0,i.jsx)(n.code,{children:"MasterMind"})," class instead."]})}),"\n",(0,i.jsx)(n.h2,{id:"generate-next-id",children:"Generate next id"}),"\n",(0,i.jsx)(n.p,{children:"To generate the next id of any collection, consider the following snippet:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:"src/app.ts",children:'import { masterMind } from "@warlock.js/cascade";\r\n\r\nasync function main() {\r\n  const initialId = 1;\r\n  const incrementBy = 1;\r\n  const nextId = await masterMind.getNextId(\r\n    "categories",\r\n    initialId,\r\n    incrementBy\r\n  );\r\n\r\n  console.log(nextId); // 1\r\n\r\n  const nextId2 = await masterMind.getNextId(\r\n    "categories",\r\n    initialId,\r\n    incrementBy\r\n  );\r\n\r\n  console.log(nextId); // 2\r\n}\r\n\r\nmain();\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"getNextId"})," method accepts three arguments:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"collectionName"}),": The collection name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"initialId"}),": The initial id value, it will be used if the collection name does not exist in the ",(0,i.jsx)(n.code,{children:"MasterMind"})," collection"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"incrementBy"}),": The increment value, it will be used if the collection name does not exist in the ",(0,i.jsx)(n.code,{children:"MasterMind"})," collection"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var i=t(6540);const s={},d=i.createContext(s);function c(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);