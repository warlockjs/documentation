"use strict";(self.webpackChunkmongez_docs=self.webpackChunkmongez_docs||[]).push([[8805],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=l(n),g=o,m=c["".concat(i,".").concat(g)]||c[g]||d[g]||s;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=g;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[c]="string"==typeof e?e:o,a[1]=u;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:5},a="Guests",u={unversionedId:"warlock/auth/guests",id:"warlock/auth/guests",title:"Guests",description:"Guests are users that are not logged in, but has a JWT.",source:"@site/docs/warlock/auth/guests.mdx",sourceDirName:"warlock/auth",slug:"/warlock/auth/guests",permalink:"/mongez/docs/warlock/auth/guests",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"warlock",previous:{title:"Auth Model",permalink:"/mongez/docs/warlock/auth/auth-model"},next:{title:"JWT",permalink:"/mongez/docs/warlock/auth/jwt"}},i={},l=[{value:"How it works",id:"how-it-works",level:2},{value:"Define guest route",id:"define-guest-route",level:2},{value:"Guest Model",id:"guest-model",level:2},{value:"Extending Guest Model",id:"extending-guest-model",level:2}],p={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"guests"},"Guests"),(0,o.kt)("p",null,"Guests are users that are not logged in, but has a ",(0,o.kt)("inlineCode",{parentName:"p"},"JWT"),"."),(0,o.kt)("h2",{id:"how-it-works"},"How it works"),(0,o.kt)("p",null,"When a user visits the website for the first time, a ",(0,o.kt)("inlineCode",{parentName:"p"},"JWT")," is generated for him, and this token is sent to the user, and the user will send this token with every request to the server."),(0,o.kt)("h2",{id:"define-guest-route"},"Define guest route"),(0,o.kt)("p",null,"To generate an access token for guests, define a route inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"routes")," file in users directory"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/users/routes.ts"',title:'"src/app/users/routes.ts"'},'import { router, Request, Response, guestLogin } from "@mongez/warlock";\n\nrouter.post("/login/guests", guestLogin);\n\n// rest of the routes\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"guestLogin")," function will generate a ",(0,o.kt)("inlineCode",{parentName:"p"},"JWT")," for the user and send it to him."),(0,o.kt)("h2",{id:"guest-model"},"Guest Model"),(0,o.kt)("p",null,"Guests have separate collection with ",(0,o.kt)("inlineCode",{parentName:"p"},"Guest")," model (guests collection in database) that has basically just the guest id."),(0,o.kt)("p",null,"Each guest model returns the following response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "int",\n  "userType": "guest"\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"userType")," is used to differentiate between guests and logged in users."),(0,o.kt)("p",null,"Every guest model extends ",(0,o.kt)("a",{parentName:"p",href:"/mongez/docs/warlock/auth/auth-model"},"Auth Model")," to inherit all access token related methods."),(0,o.kt)("h2",{id:"extending-guest-model"},"Extending Guest Model"),(0,o.kt)("p",null,"You can extend the guest model to modify or set the output data when called inside guest login."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app/users/models/guest.ts"',title:'"src/app/users/models/guest.ts"'},'import { Guest as BaseGuest } from "@mongez/warlock";\n\nexport class Guest extends BaseGuest {\n  // do your stuff here\n}\n')),(0,o.kt)("p",null,"Now modify the ",(0,o.kt)("inlineCode",{parentName:"p"},"auth.userType")," configurations to use the new guest model."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{5} title="src/config/auth.ts"',"{5}":!0,title:'"src/config/auth.ts"'},'import { AuthConfigurations } from "@mongez/warlock";\nimport { Guest } from "app/users/models/guest";\n\nconst authConfigurations: AuthConfigurations = {\n  userType: {\n    guest: Guest,\n    // other user types\n  },\n  // rest of the configurations\n};\n')))}d.isMDXComponent=!0}}]);