"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2724],{4918:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=t(4848),r=t(8453);const o={sidebar_position:1},i="Introduction",a={id:"warlock/http/introduction",title:"Introduction",description:"Http Requests is the core of any web application. Warlock provides a simple and easy to use API to make HTTP requests.",source:"@site/docs/warlock/http/introduction.mdx",sourceDirName:"warlock/http",slug:"/warlock/http/introduction",permalink:"/docs/warlock/http/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"warlock",previous:{title:"Http Requests",permalink:"/docs/category/http-requests"},next:{title:"Routes",permalink:"/docs/warlock/http/routes"}},l={},c=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Middleware",id:"middleware",level:2},{value:"Handler Or Controller?",id:"handler-or-controller",level:2},{value:"Function Handlers VS Class Handlers",id:"function-handlers-vs-class-handlers",level:2},{value:"Using Handlers",id:"using-handlers",level:3},{value:"Using Class Handlers",id:"using-class-handlers",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(s.p,{children:"Http Requests is the core of any web application. Warlock provides a simple and easy to use API to make HTTP requests."}),"\n",(0,n.jsx)(s.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,n.jsxs)(s.p,{children:["Following the steps of ",(0,n.jsx)(s.a,{href:"https://expressjs.com/",children:"Express"})," and ",(0,n.jsx)(s.a,{href:"https://www.fastify.io/",children:"Fastify"}),", Warlock uses the same concept of ",(0,n.jsx)(s.code,{children:"request"})," and ",(0,n.jsx)(s.code,{children:"response"})," objects."]}),"\n",(0,n.jsxs)(s.p,{children:["So when you make a request, Warlock will create a ",(0,n.jsx)(s.code,{children:"request"})," object that contains all the information about the request, and a ",(0,n.jsx)(s.code,{children:"response"})," object that contains all the information about the response."]}),"\n",(0,n.jsx)(s.p,{children:"Let's see a simple example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",metastring:'title="src/app/general/routes.ts"',children:'import { router, Request, Response } from "@warlock.js/core";\r\n\r\nrouter.get("/", (request: Request, response: Response) => {\r\n  return response.success({\r\n    message: "Hello World",\r\n  });\r\n});\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Nothing special here, we just created a simple route that returns a success response with a message ",(0,n.jsx)(s.code,{children:"Hello World"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,n.jsxs)(s.p,{children:["Simply, we define our ",(0,n.jsx)(s.a,{href:"./routes",children:"app routes"})," to define which handlers will be executed when a request is made to a specific route."]}),"\n",(0,n.jsx)(s.p,{children:"When a request is made, Warlock will check if there is a route that matches the request URL, if there is a match, then it will execute the handler and return the response."}),"\n",(0,n.jsx)(s.h2,{id:"middleware",children:"Middleware"}),"\n",(0,n.jsx)(s.p,{children:"Middleware is a function that will be executed before the handler, it's used to modify the request or the response, or to execute some code before the handler."}),"\n",(0,n.jsx)(s.p,{children:"So we can define the http cycle as follows:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Define the routes"}),"\n",(0,n.jsx)(s.li,{children:"Execute the middleware (if exists)"}),"\n",(0,n.jsx)(s.li,{children:"Execute the handler that receives the request and returns the response"}),"\n",(0,n.jsx)(s.li,{children:"Send the response"}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"handler-or-controller",children:"Handler Or Controller?"}),"\n",(0,n.jsxs)(s.p,{children:["Both has the same meaning, we prefer to use the term ",(0,n.jsx)(s.code,{children:"request handler"})," but for more other programming languages standards, we store all ",(0,n.jsx)(s.code,{children:"handlers"})," inside the ",(0,n.jsx)(s.code,{children:"controllers"})," directory."]}),"\n",(0,n.jsx)(s.h2,{id:"function-handlers-vs-class-handlers",children:"Function Handlers VS Class Handlers"}),"\n",(0,n.jsxs)(s.p,{children:["In such programming language as ",(0,n.jsx)(s.code,{children:"Typescript"})," (Yes typescript not javascript), we can use both paradigms, so let's see the difference between them."]}),"\n",(0,n.jsx)(s.h3,{id:"using-handlers",children:"Using Handlers"}),"\n",(0,n.jsxs)(s.p,{children:["Handlers are great for simple routes that does a simple task and for decoupling the code, it makes perfect sense to use it for a ",(0,n.jsx)(s.code,{children:"login"})," route for instance, we just need to validate the request and return the response."]}),"\n",(0,n.jsx)(s.h2,{id:"using-class-handlers",children:"Using Class Handlers"}),"\n",(0,n.jsxs)(s.p,{children:["In ",(0,n.jsx)(s.code,{children:"Warlock"}),", we prefer using ",(0,n.jsx)(s.code,{children:"classes"})," when it comes to ",(0,n.jsx)(s.code,{children:"RESTful"})," APIs, because it makes it easier to maintain the code and to add more features to the same route."]}),"\n",(0,n.jsxs)(s.p,{children:["That's why we ",(0,n.jsx)(s.a,{href:"./restful",children:"introduced Restful Classes"})," that makes it easier to create a ",(0,n.jsx)(s.code,{children:"RESTful"})," API with around 6 routes in a single class."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var n=t(6540);const r={},o=n.createContext(r);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);